[INFO ] 2020-03-05T06:53:02,012Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/generated-custom-cordapps/20200305-065301.283/custom-cordapp_1_5_8b40fcdd-3ad1-48f8-a02d-6eb6c857e3a1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/generated-custom-cordapps/20200305-065301.283/custom-cordapp_1_5_8df33d50-3f4f-4653-bba6-bacd104e2ab5.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:53:02,249Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/generated-custom-cordapps/20200305-065301.283/custom-cordapp_1_5_8b40fcdd-3ad1-48f8-a02d-6eb6c857e3a1.jar {}
[INFO ] 2020-03-05T06:53:02,526Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/generated-custom-cordapps/20200305-065301.283/custom-cordapp_1_5_8df33d50-3f4f-4653-bba6-bacd104e2ab5.jar {}
[ERROR] 2020-03-05T06:53:09,368Z [Test worker] internal.Verifier. - Error validating transaction 6486031A645B74DB0D76ADCDBBF17556732FC94C980FB335F270BF05AE238284. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The lender and the borrower cannot be the same entity.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:44) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$10(IOUContractTests.java:96) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderIsNotBorrower$11(IOUContractTests.java:93) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lenderIsNotBorrower(IOUContractTests.java:92) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:53:09,385Z [Test worker] internal.Verifier. - Error validating transaction 6486031A645B74DB0D76ADCDBBF17556732FC94C980FB335F270BF05AE238284. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The lender and the borrower cannot be the same entity.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:44) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$10(IOUContractTests.java:96) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderIsNotBorrower$11(IOUContractTests.java:93) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lenderIsNotBorrower(IOUContractTests.java:92) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:53:09,431Z [Test worker] internal.Verifier. - Error validating transaction 6486031A645B74DB0D76ADCDBBF17556732FC94C980FB335F270BF05AE238284. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The lender and the borrower cannot be the same entity.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:44) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:298) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderIsNotBorrower$11(IOUContractTests.java:93) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lenderIsNotBorrower(IOUContractTests.java:92) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:53:11,931Z [Test worker] internal.Verifier. - Error validating transaction 38488142BCD2B70ACDFC8492907E5811A8E8D91ACE3FDC6E4B12D4F498E789D1. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: Only one output state should be created.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:41) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$4(IOUContractTests.java:57) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveOneOutput$5(IOUContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveOneOutput(IOUContractTests.java:52) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:53:11,937Z [Test worker] internal.Verifier. - Error validating transaction 38488142BCD2B70ACDFC8492907E5811A8E8D91ACE3FDC6E4B12D4F498E789D1. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: Only one output state should be created.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:41) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$4(IOUContractTests.java:57) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveOneOutput$5(IOUContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveOneOutput(IOUContractTests.java:52) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:53:11,951Z [Test worker] internal.Verifier. - Error validating transaction 38488142BCD2B70ACDFC8492907E5811A8E8D91ACE3FDC6E4B12D4F498E789D1. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: Only one output state should be created.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:41) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:298) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveOneOutput$5(IOUContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveOneOutput(IOUContractTests.java:52) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:53:14,233Z [Test worker] internal.Verifier. - Error validating transaction 3D2A0817FF7AB9087CE5DF11765FC8F8701A7606330C634DD2EF041C885FAA00. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$8(IOUContractTests.java:83) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$borrowerMustSignTransaction$9(IOUContractTests.java:80) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.borrowerMustSignTransaction(IOUContractTests.java:79) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:53:14,246Z [Test worker] internal.Verifier. - Error validating transaction 3D2A0817FF7AB9087CE5DF11765FC8F8701A7606330C634DD2EF041C885FAA00. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$8(IOUContractTests.java:83) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$borrowerMustSignTransaction$9(IOUContractTests.java:80) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.borrowerMustSignTransaction(IOUContractTests.java:79) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:53:14,271Z [Test worker] internal.Verifier. - Error validating transaction 3D2A0817FF7AB9087CE5DF11765FC8F8701A7606330C634DD2EF041C885FAA00. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:298) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$borrowerMustSignTransaction$9(IOUContractTests.java:80) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.borrowerMustSignTransaction(IOUContractTests.java:79) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[WARN ] 2020-03-05T06:53:14,394Z [Test worker] contracts.AttachmentConstraint. - Found state com.example.contract.IOUContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[ERROR] 2020-03-05T06:53:16,391Z [Test worker] internal.Verifier. - Error validating transaction 47E469B0AB52E55C0CB51C85263B94928F0BCAF70C2758D7EEE13E7CA8594638. [errorCode=1o34444, moreInformationAt=https://errors.corda.net/OS/4.3/1o34444] {}
java.lang.IllegalStateException: Required com.example.contract.IOUContract.Commands.Create command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:81) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:36) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:298) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:336) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$2(IOUContractTests.java:40) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveNoInputs$3(IOUContractTests.java:39) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveNoInputs(IOUContractTests.java:38) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:53:16,528Z [Test worker] internal.Verifier. - Error validating transaction E0FA2E7D3A7DB69A42D9B9964AE00AB0369D7F1F5D666DED10451C776DB5258E. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: No inputs should be consumed when issuing an IOU.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:39) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$2(IOUContractTests.java:43) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveNoInputs$3(IOUContractTests.java:39) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveNoInputs(IOUContractTests.java:38) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:53:16,539Z [Test worker] internal.Verifier. - Error validating transaction E0FA2E7D3A7DB69A42D9B9964AE00AB0369D7F1F5D666DED10451C776DB5258E. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: No inputs should be consumed when issuing an IOU.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:39) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$2(IOUContractTests.java:43) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveNoInputs$3(IOUContractTests.java:39) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveNoInputs(IOUContractTests.java:38) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:53:16,550Z [Test worker] internal.Verifier. - Error validating transaction E0FA2E7D3A7DB69A42D9B9964AE00AB0369D7F1F5D666DED10451C776DB5258E. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: No inputs should be consumed when issuing an IOU.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:39) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:298) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveNoInputs$3(IOUContractTests.java:39) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveNoInputs(IOUContractTests.java:38) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:53:18,621Z [Test worker] internal.Verifier. - Error validating transaction F5BEE2BB09DF56F3D5F9334FD3EBB4B9A7C68347695B9304A6230609AC02C416. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$12(IOUContractTests.java:109) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$cannotCreateNegativeValueIOUs$13(IOUContractTests.java:106) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.cannotCreateNegativeValueIOUs(IOUContractTests.java:105) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:53:18,631Z [Test worker] internal.Verifier. - Error validating transaction F5BEE2BB09DF56F3D5F9334FD3EBB4B9A7C68347695B9304A6230609AC02C416. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$12(IOUContractTests.java:109) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$cannotCreateNegativeValueIOUs$13(IOUContractTests.java:106) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.cannotCreateNegativeValueIOUs(IOUContractTests.java:105) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:53:18,673Z [Test worker] internal.Verifier. - Error validating transaction F5BEE2BB09DF56F3D5F9334FD3EBB4B9A7C68347695B9304A6230609AC02C416. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:298) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$cannotCreateNegativeValueIOUs$13(IOUContractTests.java:106) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.cannotCreateNegativeValueIOUs(IOUContractTests.java:105) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:53:20,792Z [Test worker] internal.Verifier. - Error validating transaction 609CB18552831FA6171F4799CB069B048CB18F5E15AB8DF781C70EC4FF5A7EA4. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$6(IOUContractTests.java:70) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderMustSignTransaction$7(IOUContractTests.java:67) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lenderMustSignTransaction(IOUContractTests.java:66) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:53:20,797Z [Test worker] internal.Verifier. - Error validating transaction 609CB18552831FA6171F4799CB069B048CB18F5E15AB8DF781C70EC4FF5A7EA4. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$6(IOUContractTests.java:70) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderMustSignTransaction$7(IOUContractTests.java:67) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lenderMustSignTransaction(IOUContractTests.java:66) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:53:20,842Z [Test worker] internal.Verifier. - Error validating transaction 609CB18552831FA6171F4799CB069B048CB18F5E15AB8DF781C70EC4FF5A7EA4. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:298) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderMustSignTransaction$7(IOUContractTests.java:67) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lenderMustSignTransaction(IOUContractTests.java:66) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[INFO ] 2020-03-05T06:53:25,650Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /home/ubuntu/parivesh/samples/cordapp-example/workflows-java ... {}
[INFO ] 2020-03-05T06:53:25,925Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-03-05T06:53:27,716Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-03-05T06:53:29,171Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-03-05T06:53:29,209Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-03-05T06:53:29,218Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-03-05T06:53:30,232Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-03-05T06:53:30,283Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-03-05T06:53:31,336Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-03-05T06:53:31,347Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-03-05T06:53:31,347Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-03-05T06:53:31,721Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-03-05T06:53:31,731Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-03-05T06:53:32,613Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-03-05T06:53:33,069Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-03-05T06:53:33,079Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-03-05T06:53:33,146Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-03-05T06:53:33,156Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-03-05T06:53:33,156Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-03-05T06:53:34,321Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-03-05T06:53:34,321Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-03-05T06:53:34,362Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-03-05T06:53:34,382Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-03-05T06:53:34,392Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-03-05T06:53:34,413Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-03-05T06:53:34,413Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-03-05T06:53:34,413Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-03-05T06:53:34,413Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-03-05T06:53:34,413Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-03-05T06:53:34,902Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-03-05T06:53:34,902Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-03-05T06:53:34,962Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-03-05T06:53:34,963Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-03-05T06:53:35,034Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-03-05T06:53:35,034Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-03-05T06:53:35,165Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-03-05T06:53:35,165Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-03-05T06:53:35,236Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-03-05T06:53:35,236Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-03-05T06:53:35,385Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:53:35,406Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-03-05T06:53:35,468Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-03-05T06:53:35,814Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-03-05T06:53:35,824Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-03-05T06:53:35,845Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-03-05T06:53:35,867Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-03-05T06:53:35,867Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-03-05T06:53:35,897Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:53:35,909Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-03-05T06:53:35,909Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:53:35,909Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-03-05T06:53:35,909Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:53:35,909Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-03-05T06:53:35,929Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-03-05T06:53:35,970Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-03-05T06:53:35,970Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-03-05T06:53:35,980Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-03-05T06:53:35,980Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:53:35,980Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-03-05T06:53:36,001Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:53:36,001Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-03-05T06:53:36,031Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-03-05T06:53:36,347Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-03-05T06:53:36,347Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-03-05T06:53:36,378Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-03-05T06:53:36,408Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-03-05T06:53:36,408Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-03-05T06:53:36,408Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:53:36,408Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-03-05T06:53:36,419Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:53:36,419Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-03-05T06:53:36,419Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:53:36,419Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-03-05T06:53:36,429Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-03-05T06:53:36,503Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-03-05T06:53:36,503Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-03-05T06:53:36,523Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-03-05T06:53:36,523Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-03-05T06:53:36,523Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-03-05T06:53:36,523Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-03-05T06:53:36,523Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-03-05T06:53:36,523Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-03-05T06:53:36,533Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-03-05T06:53:36,538Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-03-05T06:53:36,548Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-03-05T06:53:36,548Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-03-05T06:53:36,548Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-03-05T06:53:36,548Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-03-05T06:53:36,548Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-03-05T06:53:36,548Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:53:36,548Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-03-05T06:53:36,548Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:53:36,558Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-03-05T06:53:36,558Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-03-05T06:53:36,558Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-03-05T06:53:36,587Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-03-05T06:53:36,621Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /home/ubuntu/parivesh/samples/cordapp-example/.gradle {}
[INFO ] 2020-03-05T06:53:36,631Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-03-05T06:53:36,665Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-03-05T06:53:36,835Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065322.915/nodes/0/cordapps] {}
[INFO ] 2020-03-05T06:53:36,840Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065322.915/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065322.915/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:53:36,857Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065322.915/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:53:36,877Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065322.915/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:53:37,499Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:53:37,559Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:53:37,704Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:53:22.906Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:53:43,713Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:43,720Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065322.915/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:43,720Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:43,760Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:43,852Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:43,865Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:46,438Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:47,154Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:47,156Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:47,159Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:47,159Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:47,294Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:47,385Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:53:47,403Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:53:47,404Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:53:47,740Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:53:47,748Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:53:47,749Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391227748) {}
[INFO ] 2020-03-05T06:53:47,752Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:53:47,951Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391227748) {}
[INFO ] 2020-03-05T06:53:48,031Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:53:48,076Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391227748) {}
[INFO ] 2020-03-05T06:53:48,133Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:53:48,172Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37E651A75F64C55F5DC1DB04D58CAEA92EA244387153D4D1A7D5271DC245F151 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:53:48,182Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-03-05T06:53:48,186Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-03-05T06:53:48,742Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391227748) {}
[INFO ] 2020-03-05T06:53:48,781Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391227748) {}
[INFO ] 2020-03-05T06:53:48,782Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:53:48,783Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391227748) {}
[INFO ] 2020-03-05T06:53:48,783Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:53:48,795Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065322.915/nodes/1/cordapps] {}
[INFO ] 2020-03-05T06:53:48,797Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065322.915/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065322.915/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:53:48,798Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065322.915/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:53:48,806Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065322.915/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[WARN ] 2020-03-05T06:53:48,810Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: CorDapp Example, file: cordapp-example-contracts-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [cordapp-example-contracts-0.1] {}
[WARN ] 2020-03-05T06:53:48,810Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: CorDapp Example, file: cordapp-example-workflows-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [cordapp-example-workflows-0.1] {}
[INFO ] 2020-03-05T06:53:48,828Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:53:48,851Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:53:48,854Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:53:22.906Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:53:49,653Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:49,655Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065322.915/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:49,655Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:49,666Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:49,669Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:49,670Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:49,831Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:49,850Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:49,851Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:49,853Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:49,853Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:49,924Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:49,931Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:53:49,934Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:53:49,935Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:53:50,063Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:53:50,066Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:53:50,085Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:53:50,086Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391230085) {}
[INFO ] 2020-03-05T06:53:50,088Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:53:50,096Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391230085) {}
[INFO ] 2020-03-05T06:53:50,107Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:53:50,124Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391230085) {}
[INFO ] 2020-03-05T06:53:50,138Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:53:50,158Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37E651A75F64C55F5DC1DB04D58CAEA92EA244387153D4D1A7D5271DC245F151 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:53:50,169Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391230085) {}
[INFO ] 2020-03-05T06:53:50,175Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391227748) {}
[INFO ] 2020-03-05T06:53:50,177Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:53:50,201Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391230085) {}
[INFO ] 2020-03-05T06:53:50,206Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:53:50,224Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391230085) {}
[INFO ] 2020-03-05T06:53:50,225Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:53:50,226Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391230085) {}
[INFO ] 2020-03-05T06:53:50,227Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:53:50,233Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065322.915/nodes/2/cordapps] {}
[INFO ] 2020-03-05T06:53:50,234Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065322.915/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065322.915/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:53:50,234Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065322.915/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:53:50,238Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065322.915/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:53:50,266Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:53:50,292Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:53:50,295Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:53:22.906Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:53:50,799Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:50,801Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065322.915/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:50,801Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:50,832Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:50,834Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:50,834Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:50,981Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:50,997Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:50,999Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:51,001Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:51,001Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:51,079Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:51,086Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:53:51,087Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:53:51,088Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:53:51,230Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:53:51,234Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:53:51,251Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:53:51,251Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391231251) {}
[INFO ] 2020-03-05T06:53:51,256Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:53:51,268Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391231251) {}
[INFO ] 2020-03-05T06:53:51,279Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:53:51,307Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391231251) {}
[INFO ] 2020-03-05T06:53:51,321Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:53:51,350Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37E651A75F64C55F5DC1DB04D58CAEA92EA244387153D4D1A7D5271DC245F151 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:53:51,371Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391231251) {}
[INFO ] 2020-03-05T06:53:51,380Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391227748) {}
[INFO ] 2020-03-05T06:53:51,381Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:53:51,392Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391231251) {}
[INFO ] 2020-03-05T06:53:51,397Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:53:51,416Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391230085) {}
[INFO ] 2020-03-05T06:53:51,418Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:53:51,435Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391231251) {}
[INFO ] 2020-03-05T06:53:51,439Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:53:51,450Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391231251) {}
[INFO ] 2020-03-05T06:53:51,451Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:53:51,452Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391231251) {}
[INFO ] 2020-03-05T06:53:51,453Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-03-05T06:53:51,455Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:53:51,455Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-03-05T06:53:51,459Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:53:51,460Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-03-05T06:53:51,749Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=506f02d0-1e57-4342-b4d7-60ccb9644ede, invocation_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, invocation_timestamp=2020-03-05T06:53:51.520Z, origin=Only For Testing, session_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, session_timestamp=2020-03-05T06:53:51.520Z, thread-id=146}
[WARN ] 2020-03-05T06:53:51,753Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract com.example.contract.IOUContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=506f02d0-1e57-4342-b4d7-60ccb9644ede, invocation_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, invocation_timestamp=2020-03-05T06:53:51.520Z, origin=Only For Testing, session_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, session_timestamp=2020-03-05T06:53:51.520Z, thread-id=146}
[ERROR] 2020-03-05T06:53:55,066Z [Mock network] internal.Verifier. - Error validating transaction AB9E27CEF3BD1F75C9D9B03D51D33159671A5ECE2313B9BD79158967E466825A. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=506f02d0-1e57-4342-b4d7-60ccb9644ede, invocation_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, invocation_timestamp=2020-03-05T06:53:51.520Z, origin=Only For Testing, session_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, session_timestamp=2020-03-05T06:53:51.520Z, thread-id=146}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:551) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
[ERROR] 2020-03-05T06:53:55,075Z [Mock network] internal.Verifier. - Error validating transaction AB9E27CEF3BD1F75C9D9B03D51D33159671A5ECE2313B9BD79158967E466825A. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=506f02d0-1e57-4342-b4d7-60ccb9644ede, invocation_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, invocation_timestamp=2020-03-05T06:53:51.520Z, origin=Only For Testing, session_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, session_timestamp=2020-03-05T06:53:51.520Z, thread-id=146}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
[INFO ] 2020-03-05T06:53:55,076Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: AB9E27CEF3BD1F75C9D9B03D51D33159671A5ECE2313B9BD79158967E466825A. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=506f02d0-1e57-4342-b4d7-60ccb9644ede, invocation_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, invocation_timestamp=2020-03-05T06:53:51.520Z, origin=Only For Testing, session_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, session_timestamp=2020-03-05T06:53:51.520Z, thread-id=146}
[INFO ] 2020-03-05T06:53:55,089Z [Mock network] statemachine.StaffedFlowHospital. - Flow [506f02d0-1e57-4342-b4d7-60ccb9644ede] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=c505880f-b5ed-4c44-a1bf-f797674b19e3, timestamp: 2020-03-05T06:53:51.520Z, entityType: Invocation, sessionId=c505880f-b5ed-4c44-a1bf-f797674b19e3, timestamp: 2020-03-05T06:53:51.520Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=5, corDappName=cordapp-example-workflows-0.1, corDappHash=A49612D7A33A82D23DEF5E9F704073CB9E5CB52C7865AEC7EA45C36D1DAF9C31), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=4E41970426DB4FAD3F02D46D13D9CCE5B1A1BD2E8F01ECD6C9A5192581FC3C26), errorState=Clean, numberOfSuspends=0), flowLogic=com.example.flow.ExampleFlow$Initiator@7466035f, pendingDeduplicationHandlers=[], isFlowResumed=true, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=7a8bf2c7-5beb-4a83-a592-c88166630695) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=506f02d0-1e57-4342-b4d7-60ccb9644ede, invocation_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, invocation_timestamp=2020-03-05T06:53:51.520Z, origin=Only For Testing, session_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, session_timestamp=2020-03-05T06:53:51.520Z, thread-id=146}
[INFO ] 2020-03-05T06:53:55,092Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=506f02d0-1e57-4342-b4d7-60ccb9644ede, invocation_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, invocation_timestamp=2020-03-05T06:53:51.520Z, origin=Only For Testing, session_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, session_timestamp=2020-03-05T06:53:51.520Z, thread-id=146}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: AB9E27CEF3BD1F75C9D9B03D51D33159671A5ECE2313B9BD79158967E466825A
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:403) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	... 18 more
[INFO ] 2020-03-05T06:53:55,095Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=506f02d0-1e57-4342-b4d7-60ccb9644ede, invocation_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, invocation_timestamp=2020-03-05T06:53:51.520Z, origin=Only For Testing, session_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, session_timestamp=2020-03-05T06:53:51.520Z, thread-id=146}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: AB9E27CEF3BD1F75C9D9B03D51D33159671A5ECE2313B9BD79158967E466825A
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:403) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	... 18 more
[WARN ] 2020-03-05T06:53:55,113Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [506f02d0-1e57-4342-b4d7-60ccb9644ede] errored, dumping all transitions:

 --- Transition of flow [506f02d0-1e57-4342-b4d7-60ccb9644ede] ---
  Timestamp: 2020-03-05T06:53:51.738Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[506f02d0-1e57-4342-b4d7-60ccb9644ede], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=c505880f-b5ed-4c44-a1bf-f797674b19e3, timestamp: 2020-03-05T06:53:51.520Z, entityType: Invocation, sessionId=c505880f-b5ed-4c44-a1bf-f797674b19e3, timestamp: 2020-03-05T06:53:51.520Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=5, corDappName=cordapp-example-workflows-0.1, corDappHash=A49612D7A33A82D23DEF5E9F704073CB9E5CB52C7865AEC7EA45C36D1DAF9C31), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=4E41970426DB4FAD3F02D46D13D9CCE5B1A1BD2E8F01ECD6C9A5192581FC3C26), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@74404485])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@74404485])
    SignalFlowHasStarted(flowId=[506f02d0-1e57-4342-b4d7-60ccb9644ede])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@74404485]
    []


 --- Transition of flow [506f02d0-1e57-4342-b4d7-60ccb9644ede] ---
  Timestamp: 2020-03-05T06:53:55.096Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: AB9E27CEF3BD1F75C9D9B03D51D33159671A5ECE2313B9BD79158967E466825A)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=7874506761027721993, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: AB9E27CEF3BD1F75C9D9B03D51D33159671A5ECE2313B9BD79158967E466825A)], propagatedIndex=0, propagating=false)


 --- Transition of flow [506f02d0-1e57-4342-b4d7-60ccb9644ede] ---
  Timestamp: 2020-03-05T06:53:55.101Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [506f02d0-1e57-4342-b4d7-60ccb9644ede] ---
  Timestamp: 2020-03-05T06:53:55.104Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=506f02d0-1e57-4342-b4d7-60ccb9644ede, invocation_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, invocation_timestamp=2020-03-05T06:53:51.520Z, origin=Only For Testing, session_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, session_timestamp=2020-03-05T06:53:51.520Z, thread-id=146}
[WARN ] 2020-03-05T06:53:55,113Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [506f02d0-1e57-4342-b4d7-60ccb9644ede] error [errorCode=1r9qcbc, moreInformationAt=https://errors.corda.net/OS/4.3/1r9qcbc] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=506f02d0-1e57-4342-b4d7-60ccb9644ede, invocation_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, invocation_timestamp=2020-03-05T06:53:51.520Z, origin=Only For Testing, session_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, session_timestamp=2020-03-05T06:53:51.520Z, thread-id=146}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: AB9E27CEF3BD1F75C9D9B03D51D33159671A5ECE2313B9BD79158967E466825A
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:403) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	... 18 more
[WARN ] 2020-03-05T06:53:55,119Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error [errorCode=1r9qcbc, moreInformationAt=https://errors.corda.net/OS/4.3/1r9qcbc] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=506f02d0-1e57-4342-b4d7-60ccb9644ede, invocation_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, invocation_timestamp=2020-03-05T06:53:51.520Z, origin=Only For Testing, session_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, session_timestamp=2020-03-05T06:53:51.520Z, thread-id=146}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: AB9E27CEF3BD1F75C9D9B03D51D33159671A5ECE2313B9BD79158967E466825A
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:403) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	... 18 more
[WARN ] 2020-03-05T06:53:55,158Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [506f02d0-1e57-4342-b4d7-60ccb9644ede] errored, dumping all transitions:

 --- Transition of flow [506f02d0-1e57-4342-b4d7-60ccb9644ede] ---
  Timestamp: 2020-03-05T06:53:51.738Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[506f02d0-1e57-4342-b4d7-60ccb9644ede], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=c505880f-b5ed-4c44-a1bf-f797674b19e3, timestamp: 2020-03-05T06:53:51.520Z, entityType: Invocation, sessionId=c505880f-b5ed-4c44-a1bf-f797674b19e3, timestamp: 2020-03-05T06:53:51.520Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=5, corDappName=cordapp-example-workflows-0.1, corDappHash=A49612D7A33A82D23DEF5E9F704073CB9E5CB52C7865AEC7EA45C36D1DAF9C31), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=4E41970426DB4FAD3F02D46D13D9CCE5B1A1BD2E8F01ECD6C9A5192581FC3C26), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@74404485])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@74404485])
    SignalFlowHasStarted(flowId=[506f02d0-1e57-4342-b4d7-60ccb9644ede])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@74404485]
    []


 --- Transition of flow [506f02d0-1e57-4342-b4d7-60ccb9644ede] ---
  Timestamp: 2020-03-05T06:53:55.096Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: AB9E27CEF3BD1F75C9D9B03D51D33159671A5ECE2313B9BD79158967E466825A)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=7874506761027721993, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: AB9E27CEF3BD1F75C9D9B03D51D33159671A5ECE2313B9BD79158967E466825A)], propagatedIndex=0, propagating=false)


 --- Transition of flow [506f02d0-1e57-4342-b4d7-60ccb9644ede] ---
  Timestamp: 2020-03-05T06:53:55.101Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [506f02d0-1e57-4342-b4d7-60ccb9644ede] ---
  Timestamp: 2020-03-05T06:53:55.104Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [506f02d0-1e57-4342-b4d7-60ccb9644ede] ---
  Timestamp: 2020-03-05T06:53:55.151Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: AB9E27CEF3BD1F75C9D9B03D51D33159671A5ECE2313B9BD79158967E466825A, errorId=7874506761027721993)], sessions=[], senderUUID=7a8bf2c7-5beb-4a83-a592-c88166630695)
    CreateTransaction
    RemoveCheckpoint(id=[506f02d0-1e57-4342-b4d7-60ccb9644ede])
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=506f02d0-1e57-4342-b4d7-60ccb9644ede)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[506f02d0-1e57-4342-b4d7-60ccb9644ede], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=7874506761027721993, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: AB9E27CEF3BD1F75C9D9B03D51D33159671A5ECE2313B9BD79158967E466825A)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=c505880f-b5ed-4c44-a1bf-f797674b19e3, timestamp: 2020-03-05T06:53:51.520Z, entityType: Invocation, sessionId=c505880f-b5ed-4c44-a1bf-f797674b19e3, timestamp: 2020-03-05T06:53:51.520Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=5, corDappName=cordapp-example-workflows-0.1, corDappHash=A49612D7A33A82D23DEF5E9F704073CB9E5CB52C7865AEC7EA45C36D1DAF9C31), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=4E41970426DB4FAD3F02D46D13D9CCE5B1A1BD2E8F01ECD6C9A5192581FC3C26), errorState=Errored(errors=[FlowError(errorId=7874506761027721993, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: AB9E27CEF3BD1F75C9D9B03D51D33159671A5ECE2313B9BD79158967E466825A)], propagatedIndex=1, propagating=true), numberOfSuspends=0), flowLogic=com.example.flow.ExampleFlow$Initiator@7466035f, pendingDeduplicationHandlers=[], isFlowResumed=false, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=7a8bf2c7-5beb-4a83-a592-c88166630695))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.errorState.propagatedIndex: 
    0
    1
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=506f02d0-1e57-4342-b4d7-60ccb9644ede, invocation_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, invocation_timestamp=2020-03-05T06:53:51.520Z, origin=Only For Testing, session_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, session_timestamp=2020-03-05T06:53:51.520Z, thread-id=146}
[WARN ] 2020-03-05T06:53:55,158Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [506f02d0-1e57-4342-b4d7-60ccb9644ede] error [errorCode=1r9qcbc, moreInformationAt=https://errors.corda.net/OS/4.3/1r9qcbc] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=506f02d0-1e57-4342-b4d7-60ccb9644ede, invocation_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, invocation_timestamp=2020-03-05T06:53:51.520Z, origin=Only For Testing, session_id=c505880f-b5ed-4c44-a1bf-f797674b19e3, session_timestamp=2020-03-05T06:53:51.520Z, thread-id=146}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: AB9E27CEF3BD1F75C9D9B03D51D33159671A5ECE2313B9BD79158967E466825A
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:403) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	... 18 more
[INFO ] 2020-03-05T06:53:55,337Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065355.237/nodes/0/cordapps] {}
[INFO ] 2020-03-05T06:53:55,338Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065355.237/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065355.237/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:53:55,339Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065355.237/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:53:55,345Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065355.237/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:53:55,363Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:53:55,367Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:53:55,372Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:53:55.237Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:53:55,872Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:55,873Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065355.237/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:55,873Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:55,881Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:55,883Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:55,883Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:55,967Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:55,988Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:55,990Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:55,993Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:55,993Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:56,113Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:56,164Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:53:56,180Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:53:56,180Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:53:56,332Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:53:56,338Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:53:56,339Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391236338) {}
[INFO ] 2020-03-05T06:53:56,348Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:53:56,374Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391236338) {}
[INFO ] 2020-03-05T06:53:56,387Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:53:56,408Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391236338) {}
[INFO ] 2020-03-05T06:53:56,421Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:53:56,449Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37E651A75F64C55F5DC1DB04D58CAEA92EA244387153D4D1A7D5271DC245F151 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:53:56,452Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-03-05T06:53:56,452Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-03-05T06:53:56,463Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391236338) {}
[INFO ] 2020-03-05T06:53:56,469Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391236338) {}
[INFO ] 2020-03-05T06:53:56,469Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:53:56,470Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391236338) {}
[INFO ] 2020-03-05T06:53:56,470Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:53:56,473Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065355.237/nodes/1/cordapps] {}
[INFO ] 2020-03-05T06:53:56,473Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065355.237/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065355.237/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:53:56,473Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065355.237/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:53:56,482Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065355.237/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:53:56,505Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:53:56,523Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:53:56,532Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:53:55.237Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:53:57,072Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:57,073Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065355.237/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:57,073Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:57,089Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:57,090Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:57,090Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:57,156Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:57,163Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:57,167Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:57,170Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:57,171Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:57,222Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:57,228Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:53:57,229Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:53:57,230Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:53:57,365Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:53:57,366Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:53:57,380Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:53:57,381Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391237381) {}
[INFO ] 2020-03-05T06:53:57,382Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:53:57,388Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391237381) {}
[INFO ] 2020-03-05T06:53:57,394Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:53:57,417Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391237381) {}
[INFO ] 2020-03-05T06:53:57,424Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37E651A75F64C55F5DC1DB04D58CAEA92EA244387153D4D1A7D5271DC245F151 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:53:57,429Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:53:57,441Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391237381) {}
[INFO ] 2020-03-05T06:53:57,453Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391236338) {}
[INFO ] 2020-03-05T06:53:57,454Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:53:57,462Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391237381) {}
[INFO ] 2020-03-05T06:53:57,465Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:53:57,471Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391237381) {}
[INFO ] 2020-03-05T06:53:57,484Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:53:57,484Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391237381) {}
[INFO ] 2020-03-05T06:53:57,485Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:53:57,488Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065355.237/nodes/2/cordapps] {}
[INFO ] 2020-03-05T06:53:57,489Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065355.237/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065355.237/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:53:57,490Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065355.237/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:53:57,516Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065355.237/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:53:57,540Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:53:57,565Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:53:57,570Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:53:55.237Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:53:57,977Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:57,978Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065355.237/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:57,978Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:58,003Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:58,005Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:58,005Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:58,090Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:58,133Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:58,135Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:58,136Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:58,136Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:58,209Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:53:58,222Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:53:58,227Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:53:58,227Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:53:58,327Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:53:58,329Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:53:58,343Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:53:58,344Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391238344) {}
[INFO ] 2020-03-05T06:53:58,345Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:53:58,351Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391238344) {}
[INFO ] 2020-03-05T06:53:58,355Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:53:58,365Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391238344) {}
[INFO ] 2020-03-05T06:53:58,373Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:53:58,387Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37E651A75F64C55F5DC1DB04D58CAEA92EA244387153D4D1A7D5271DC245F151 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:53:58,395Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391238344) {}
[INFO ] 2020-03-05T06:53:58,397Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391236338) {}
[INFO ] 2020-03-05T06:53:58,398Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:53:58,412Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391238344) {}
[INFO ] 2020-03-05T06:53:58,415Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:53:58,427Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391237381) {}
[INFO ] 2020-03-05T06:53:58,429Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:53:58,443Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391238344) {}
[INFO ] 2020-03-05T06:53:58,447Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:53:58,458Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391238344) {}
[INFO ] 2020-03-05T06:53:58,458Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:53:58,459Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391238344) {}
[INFO ] 2020-03-05T06:53:58,460Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-03-05T06:53:58,461Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:53:58,461Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-03-05T06:53:58,462Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:53:58,463Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:54:01,341Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=c61e8535-8d3d-4c7f-92e9-341b52b208c4, invocation_id=723cac1c-622a-4806-92f2-d77d65b42a64, invocation_timestamp=2020-03-05T06:54:01.208Z, origin=O=Mock Company 1, L=London, C=GB, session_id=723cac1c-622a-4806-92f2-d77d65b42a64, session_timestamp=2020-03-05T06:54:01.208Z, thread-id=223, tx_id=7C3262BA0FF16EF7428CB90D48EEF28AB41BE50ADD0D66523E709BAE6EDD6C38}
[INFO ] 2020-03-05T06:54:01,479Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=c61e8535-8d3d-4c7f-92e9-341b52b208c4, invocation_id=723cac1c-622a-4806-92f2-d77d65b42a64, invocation_timestamp=2020-03-05T06:54:01.208Z, origin=O=Mock Company 1, L=London, C=GB, session_id=723cac1c-622a-4806-92f2-d77d65b42a64, session_timestamp=2020-03-05T06:54:01.208Z, thread-id=223, tx_id=7C3262BA0FF16EF7428CB90D48EEF28AB41BE50ADD0D66523E709BAE6EDD6C38}
[INFO ] 2020-03-05T06:54:01,601Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=921ce680-9063-45b4-8cbd-f5c5dda7d3f2, invocation_id=0153382f-22c9-427b-a624-c29a987be5f9, invocation_timestamp=2020-03-05T06:53:58.464Z, origin=Only For Testing, session_id=0153382f-22c9-427b-a624-c29a987be5f9, session_timestamp=2020-03-05T06:53:58.464Z, thread-id=223, tx_id=7C3262BA0FF16EF7428CB90D48EEF28AB41BE50ADD0D66523E709BAE6EDD6C38}
[INFO ] 2020-03-05T06:54:01,602Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=921ce680-9063-45b4-8cbd-f5c5dda7d3f2, invocation_id=0153382f-22c9-427b-a624-c29a987be5f9, invocation_timestamp=2020-03-05T06:53:58.464Z, origin=Only For Testing, session_id=0153382f-22c9-427b-a624-c29a987be5f9, session_timestamp=2020-03-05T06:53:58.464Z, thread-id=223, tx_id=7C3262BA0FF16EF7428CB90D48EEF28AB41BE50ADD0D66523E709BAE6EDD6C38}
[INFO ] 2020-03-05T06:54:01,666Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=921ce680-9063-45b4-8cbd-f5c5dda7d3f2, invocation_id=0153382f-22c9-427b-a624-c29a987be5f9, invocation_timestamp=2020-03-05T06:53:58.464Z, origin=Only For Testing, session_id=0153382f-22c9-427b-a624-c29a987be5f9, session_timestamp=2020-03-05T06:53:58.464Z, thread-id=223, tx_id=7C3262BA0FF16EF7428CB90D48EEF28AB41BE50ADD0D66523E709BAE6EDD6C38}
[INFO ] 2020-03-05T06:54:01,717Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=c61e8535-8d3d-4c7f-92e9-341b52b208c4, invocation_id=723cac1c-622a-4806-92f2-d77d65b42a64, invocation_timestamp=2020-03-05T06:54:01.208Z, origin=O=Mock Company 1, L=London, C=GB, session_id=723cac1c-622a-4806-92f2-d77d65b42a64, session_timestamp=2020-03-05T06:54:01.208Z, thread-id=223, tx_id=7C3262BA0FF16EF7428CB90D48EEF28AB41BE50ADD0D66523E709BAE6EDD6C38}
[INFO ] 2020-03-05T06:54:01,732Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=c61e8535-8d3d-4c7f-92e9-341b52b208c4, invocation_id=723cac1c-622a-4806-92f2-d77d65b42a64, invocation_timestamp=2020-03-05T06:54:01.208Z, origin=O=Mock Company 1, L=London, C=GB, session_id=723cac1c-622a-4806-92f2-d77d65b42a64, session_timestamp=2020-03-05T06:54:01.208Z, thread-id=223, tx_id=7C3262BA0FF16EF7428CB90D48EEF28AB41BE50ADD0D66523E709BAE6EDD6C38}
[INFO ] 2020-03-05T06:54:01,737Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000003, flow-id=c61e8535-8d3d-4c7f-92e9-341b52b208c4, invocation_id=723cac1c-622a-4806-92f2-d77d65b42a64, invocation_timestamp=2020-03-05T06:54:01.208Z, origin=O=Mock Company 1, L=London, C=GB, session_id=723cac1c-622a-4806-92f2-d77d65b42a64, session_timestamp=2020-03-05T06:54:01.208Z, thread-id=223, tx_id=7C3262BA0FF16EF7428CB90D48EEF28AB41BE50ADD0D66523E709BAE6EDD6C38}
[INFO ] 2020-03-05T06:54:01,746Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000003, flow-id=c61e8535-8d3d-4c7f-92e9-341b52b208c4, invocation_id=723cac1c-622a-4806-92f2-d77d65b42a64, invocation_timestamp=2020-03-05T06:54:01.208Z, origin=O=Mock Company 1, L=London, C=GB, session_id=723cac1c-622a-4806-92f2-d77d65b42a64, session_timestamp=2020-03-05T06:54:01.208Z, thread-id=223, tx_id=7C3262BA0FF16EF7428CB90D48EEF28AB41BE50ADD0D66523E709BAE6EDD6C38}
[INFO ] 2020-03-05T06:54:01,765Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=921ce680-9063-45b4-8cbd-f5c5dda7d3f2, invocation_id=0153382f-22c9-427b-a624-c29a987be5f9, invocation_timestamp=2020-03-05T06:53:58.464Z, origin=Only For Testing, session_id=0153382f-22c9-427b-a624-c29a987be5f9, session_timestamp=2020-03-05T06:53:58.464Z, thread-id=223, tx_id=7C3262BA0FF16EF7428CB90D48EEF28AB41BE50ADD0D66523E709BAE6EDD6C38}
[INFO ] 2020-03-05T06:54:01,766Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=921ce680-9063-45b4-8cbd-f5c5dda7d3f2, invocation_id=0153382f-22c9-427b-a624-c29a987be5f9, invocation_timestamp=2020-03-05T06:53:58.464Z, origin=Only For Testing, session_id=0153382f-22c9-427b-a624-c29a987be5f9, session_timestamp=2020-03-05T06:53:58.464Z, thread-id=223, tx_id=7C3262BA0FF16EF7428CB90D48EEF28AB41BE50ADD0D66523E709BAE6EDD6C38}
[INFO ] 2020-03-05T06:54:01,881Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065401.799/nodes/0/cordapps] {}
[INFO ] 2020-03-05T06:54:01,882Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065401.799/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065401.799/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:54:01,883Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065401.799/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:54:01,887Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065401.799/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:54:01,904Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:54:01,907Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:54:01,913Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:54:01.799Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:54:02,468Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:02,470Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065401.799/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:02,470Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:02,478Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:02,479Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:02,479Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:02,550Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:02,564Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:02,565Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:02,567Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:02,567Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:02,616Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:02,647Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:54:02,653Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:54:02,654Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:54:02,774Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:54:02,778Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:54:02,778Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391242778) {}
[INFO ] 2020-03-05T06:54:02,780Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:54:02,794Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391242778) {}
[INFO ] 2020-03-05T06:54:02,805Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:54:02,840Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37E651A75F64C55F5DC1DB04D58CAEA92EA244387153D4D1A7D5271DC245F151 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:54:02,840Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391242778) {}
[INFO ] 2020-03-05T06:54:02,847Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:02,848Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-03-05T06:54:02,848Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-03-05T06:54:02,863Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391242778) {}
[INFO ] 2020-03-05T06:54:02,870Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391242778) {}
[INFO ] 2020-03-05T06:54:02,870Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:02,870Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391242778) {}
[INFO ] 2020-03-05T06:54:02,870Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:02,874Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065401.799/nodes/1/cordapps] {}
[INFO ] 2020-03-05T06:54:02,883Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065401.799/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065401.799/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:54:02,883Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065401.799/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:54:02,887Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065401.799/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:54:02,911Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:54:02,936Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:54:02,939Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:54:01.799Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:54:03,309Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:03,334Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065401.799/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:03,334Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:03,349Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:03,350Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:03,350Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:03,456Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:03,462Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:03,463Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:03,469Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:03,469Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:03,522Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:03,528Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:54:03,529Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:03,530Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:03,624Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:03,626Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:54:03,640Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:54:03,640Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391243640) {}
[INFO ] 2020-03-05T06:54:03,641Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:03,646Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391243640) {}
[INFO ] 2020-03-05T06:54:03,650Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:54:03,666Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391243640) {}
[INFO ] 2020-03-05T06:54:03,673Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:03,694Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37E651A75F64C55F5DC1DB04D58CAEA92EA244387153D4D1A7D5271DC245F151 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:54:03,705Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391243640) {}
[INFO ] 2020-03-05T06:54:03,707Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391242778) {}
[INFO ] 2020-03-05T06:54:03,708Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:54:03,724Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391243640) {}
[INFO ] 2020-03-05T06:54:03,728Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:03,737Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391243640) {}
[INFO ] 2020-03-05T06:54:03,737Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:03,738Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391243640) {}
[INFO ] 2020-03-05T06:54:03,738Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:03,744Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065401.799/nodes/2/cordapps] {}
[INFO ] 2020-03-05T06:54:03,745Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065401.799/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065401.799/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:54:03,745Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065401.799/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:54:03,748Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065401.799/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:54:03,768Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:54:03,784Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:54:03,786Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:54:01.799Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:54:04,090Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:04,091Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065401.799/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:04,091Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:04,098Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:04,101Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:04,101Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:04,180Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:04,193Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:04,218Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:04,220Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:04,221Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:04,290Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:04,295Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:54:04,299Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:04,299Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:04,442Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:04,444Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:54:04,462Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:54:04,462Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391244462) {}
[INFO ] 2020-03-05T06:54:04,465Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:04,471Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391244462) {}
[INFO ] 2020-03-05T06:54:04,475Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:54:04,500Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391244462) {}
[INFO ] 2020-03-05T06:54:04,517Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:04,530Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37E651A75F64C55F5DC1DB04D58CAEA92EA244387153D4D1A7D5271DC245F151 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:54:04,551Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391244462) {}
[INFO ] 2020-03-05T06:54:04,553Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391242778) {}
[INFO ] 2020-03-05T06:54:04,554Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:54:04,561Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391244462) {}
[INFO ] 2020-03-05T06:54:04,568Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:04,574Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391243640) {}
[INFO ] 2020-03-05T06:54:04,576Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:04,582Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391244462) {}
[INFO ] 2020-03-05T06:54:04,582Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:04,588Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391244462) {}
[INFO ] 2020-03-05T06:54:04,588Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:04,588Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391244462) {}
[INFO ] 2020-03-05T06:54:04,588Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-03-05T06:54:04,588Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:54:04,588Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-03-05T06:54:04,588Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:54:04,588Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:54:06,775Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=9830b726-6eac-4d5c-ad0d-88cd8ca085ea, invocation_id=94b4a7bb-c426-45a7-b4f6-a51ebf2b835d, invocation_timestamp=2020-03-05T06:54:06.742Z, origin=O=Mock Company 1, L=London, C=GB, session_id=94b4a7bb-c426-45a7-b4f6-a51ebf2b835d, session_timestamp=2020-03-05T06:54:06.742Z, thread-id=297, tx_id=F2F180B66DAD2990819E7FE6444CE327146E74A89D7AAAB56CBC01D6EB9211FD}
[INFO ] 2020-03-05T06:54:06,790Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=9830b726-6eac-4d5c-ad0d-88cd8ca085ea, invocation_id=94b4a7bb-c426-45a7-b4f6-a51ebf2b835d, invocation_timestamp=2020-03-05T06:54:06.742Z, origin=O=Mock Company 1, L=London, C=GB, session_id=94b4a7bb-c426-45a7-b4f6-a51ebf2b835d, session_timestamp=2020-03-05T06:54:06.742Z, thread-id=297, tx_id=F2F180B66DAD2990819E7FE6444CE327146E74A89D7AAAB56CBC01D6EB9211FD}
[INFO ] 2020-03-05T06:54:06,901Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=d17df85d-bd67-4a0f-96f8-12865c1a7f6e, invocation_id=cd283498-f52d-4fca-b5e8-b229cdb4d3f6, invocation_timestamp=2020-03-05T06:54:04.595Z, origin=Only For Testing, session_id=cd283498-f52d-4fca-b5e8-b229cdb4d3f6, session_timestamp=2020-03-05T06:54:04.595Z, thread-id=297, tx_id=F2F180B66DAD2990819E7FE6444CE327146E74A89D7AAAB56CBC01D6EB9211FD}
[INFO ] 2020-03-05T06:54:06,901Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=d17df85d-bd67-4a0f-96f8-12865c1a7f6e, invocation_id=cd283498-f52d-4fca-b5e8-b229cdb4d3f6, invocation_timestamp=2020-03-05T06:54:04.595Z, origin=Only For Testing, session_id=cd283498-f52d-4fca-b5e8-b229cdb4d3f6, session_timestamp=2020-03-05T06:54:04.595Z, thread-id=297, tx_id=F2F180B66DAD2990819E7FE6444CE327146E74A89D7AAAB56CBC01D6EB9211FD}
[INFO ] 2020-03-05T06:54:06,915Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=d17df85d-bd67-4a0f-96f8-12865c1a7f6e, invocation_id=cd283498-f52d-4fca-b5e8-b229cdb4d3f6, invocation_timestamp=2020-03-05T06:54:04.595Z, origin=Only For Testing, session_id=cd283498-f52d-4fca-b5e8-b229cdb4d3f6, session_timestamp=2020-03-05T06:54:04.595Z, thread-id=297, tx_id=F2F180B66DAD2990819E7FE6444CE327146E74A89D7AAAB56CBC01D6EB9211FD}
[INFO ] 2020-03-05T06:54:06,941Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=9830b726-6eac-4d5c-ad0d-88cd8ca085ea, invocation_id=94b4a7bb-c426-45a7-b4f6-a51ebf2b835d, invocation_timestamp=2020-03-05T06:54:06.742Z, origin=O=Mock Company 1, L=London, C=GB, session_id=94b4a7bb-c426-45a7-b4f6-a51ebf2b835d, session_timestamp=2020-03-05T06:54:06.742Z, thread-id=297, tx_id=F2F180B66DAD2990819E7FE6444CE327146E74A89D7AAAB56CBC01D6EB9211FD}
[INFO ] 2020-03-05T06:54:06,951Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=9830b726-6eac-4d5c-ad0d-88cd8ca085ea, invocation_id=94b4a7bb-c426-45a7-b4f6-a51ebf2b835d, invocation_timestamp=2020-03-05T06:54:06.742Z, origin=O=Mock Company 1, L=London, C=GB, session_id=94b4a7bb-c426-45a7-b4f6-a51ebf2b835d, session_timestamp=2020-03-05T06:54:06.742Z, thread-id=297, tx_id=F2F180B66DAD2990819E7FE6444CE327146E74A89D7AAAB56CBC01D6EB9211FD}
[INFO ] 2020-03-05T06:54:06,954Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=9830b726-6eac-4d5c-ad0d-88cd8ca085ea, invocation_id=94b4a7bb-c426-45a7-b4f6-a51ebf2b835d, invocation_timestamp=2020-03-05T06:54:06.742Z, origin=O=Mock Company 1, L=London, C=GB, session_id=94b4a7bb-c426-45a7-b4f6-a51ebf2b835d, session_timestamp=2020-03-05T06:54:06.742Z, thread-id=297, tx_id=F2F180B66DAD2990819E7FE6444CE327146E74A89D7AAAB56CBC01D6EB9211FD}
[INFO ] 2020-03-05T06:54:06,961Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=9830b726-6eac-4d5c-ad0d-88cd8ca085ea, invocation_id=94b4a7bb-c426-45a7-b4f6-a51ebf2b835d, invocation_timestamp=2020-03-05T06:54:06.742Z, origin=O=Mock Company 1, L=London, C=GB, session_id=94b4a7bb-c426-45a7-b4f6-a51ebf2b835d, session_timestamp=2020-03-05T06:54:06.742Z, thread-id=297, tx_id=F2F180B66DAD2990819E7FE6444CE327146E74A89D7AAAB56CBC01D6EB9211FD}
[INFO ] 2020-03-05T06:54:06,969Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=d17df85d-bd67-4a0f-96f8-12865c1a7f6e, invocation_id=cd283498-f52d-4fca-b5e8-b229cdb4d3f6, invocation_timestamp=2020-03-05T06:54:04.595Z, origin=Only For Testing, session_id=cd283498-f52d-4fca-b5e8-b229cdb4d3f6, session_timestamp=2020-03-05T06:54:04.595Z, thread-id=297, tx_id=F2F180B66DAD2990819E7FE6444CE327146E74A89D7AAAB56CBC01D6EB9211FD}
[INFO ] 2020-03-05T06:54:06,969Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=d17df85d-bd67-4a0f-96f8-12865c1a7f6e, invocation_id=cd283498-f52d-4fca-b5e8-b229cdb4d3f6, invocation_timestamp=2020-03-05T06:54:04.595Z, origin=Only For Testing, session_id=cd283498-f52d-4fca-b5e8-b229cdb4d3f6, session_timestamp=2020-03-05T06:54:04.595Z, thread-id=297, tx_id=F2F180B66DAD2990819E7FE6444CE327146E74A89D7AAAB56CBC01D6EB9211FD}
[INFO ] 2020-03-05T06:54:07,089Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065406.999/nodes/0/cordapps] {}
[INFO ] 2020-03-05T06:54:07,089Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065406.999/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065406.999/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:54:07,089Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065406.999/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:54:07,102Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065406.999/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:54:07,118Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:54:07,121Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:54:07,125Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:54:06.998Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:54:07,490Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:07,498Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065406.999/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:07,498Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:07,515Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:07,517Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:07,517Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:07,614Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:07,623Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:07,623Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:07,625Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:07,625Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:07,689Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:07,719Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:54:07,725Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:54:07,726Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:54:07,802Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:54:07,806Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:54:07,806Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391247806) {}
[INFO ] 2020-03-05T06:54:07,809Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:54:07,825Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391247806) {}
[INFO ] 2020-03-05T06:54:07,831Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:54:07,848Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391247806) {}
[INFO ] 2020-03-05T06:54:07,856Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37E651A75F64C55F5DC1DB04D58CAEA92EA244387153D4D1A7D5271DC245F151 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:54:07,857Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-03-05T06:54:07,857Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-03-05T06:54:07,865Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:07,866Z [MockNode-10-2] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391247806) {}
[INFO ] 2020-03-05T06:54:07,867Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391247806) {}
[INFO ] 2020-03-05T06:54:07,867Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:07,867Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391247806) {}
[INFO ] 2020-03-05T06:54:07,867Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:07,870Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065406.999/nodes/1/cordapps] {}
[INFO ] 2020-03-05T06:54:07,870Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065406.999/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065406.999/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:54:07,870Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065406.999/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:54:07,889Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065406.999/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:54:07,906Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:54:07,920Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:54:07,922Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:54:06.998Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:54:08,238Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:08,240Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065406.999/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:08,240Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:08,255Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:08,256Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:08,256Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:08,348Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:08,362Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:08,371Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:08,372Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:08,372Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:08,440Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:08,443Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:54:08,444Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:08,444Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:08,511Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:08,512Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:54:08,525Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:54:08,525Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391248525) {}
[INFO ] 2020-03-05T06:54:08,526Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:08,530Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391248525) {}
[INFO ] 2020-03-05T06:54:08,533Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:54:08,548Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391248525) {}
[INFO ] 2020-03-05T06:54:08,558Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:08,573Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37E651A75F64C55F5DC1DB04D58CAEA92EA244387153D4D1A7D5271DC245F151 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:54:08,584Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391248525) {}
[INFO ] 2020-03-05T06:54:08,595Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391247806) {}
[INFO ] 2020-03-05T06:54:08,597Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:54:08,603Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391248525) {}
[INFO ] 2020-03-05T06:54:08,605Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:08,611Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391248525) {}
[INFO ] 2020-03-05T06:54:08,612Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:08,612Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391248525) {}
[INFO ] 2020-03-05T06:54:08,612Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:08,615Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065406.999/nodes/2/cordapps] {}
[INFO ] 2020-03-05T06:54:08,616Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065406.999/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065406.999/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:54:08,616Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065406.999/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:54:08,619Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065406.999/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:54:08,639Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:54:08,658Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:54:08,661Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:54:06.998Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:54:09,058Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:09,065Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065406.999/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:09,065Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:09,073Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:09,074Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:09,074Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:09,183Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:09,201Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:09,202Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:09,206Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:09,206Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:09,281Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:09,287Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:54:09,288Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:09,288Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:09,372Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:09,373Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:54:09,392Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:54:09,392Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391249392) {}
[INFO ] 2020-03-05T06:54:09,395Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:09,405Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391249392) {}
[INFO ] 2020-03-05T06:54:09,411Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:54:09,429Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391249392) {}
[INFO ] 2020-03-05T06:54:09,435Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:09,453Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37E651A75F64C55F5DC1DB04D58CAEA92EA244387153D4D1A7D5271DC245F151 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:54:09,464Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391249392) {}
[INFO ] 2020-03-05T06:54:09,468Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391247806) {}
[INFO ] 2020-03-05T06:54:09,469Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:54:09,480Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391249392) {}
[INFO ] 2020-03-05T06:54:09,483Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:09,493Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391248525) {}
[INFO ] 2020-03-05T06:54:09,494Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:09,500Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391249392) {}
[INFO ] 2020-03-05T06:54:09,501Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:09,513Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391249392) {}
[INFO ] 2020-03-05T06:54:09,513Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:09,513Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391249392) {}
[INFO ] 2020-03-05T06:54:09,513Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-03-05T06:54:09,513Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:54:09,513Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-03-05T06:54:09,513Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:54:09,513Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:54:11,662Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=c48ad324-cd40-42e8-89a3-8425a5ff1198, invocation_id=6252ec75-accc-4e89-bd20-7e61eab28638, invocation_timestamp=2020-03-05T06:54:11.650Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6252ec75-accc-4e89-bd20-7e61eab28638, session_timestamp=2020-03-05T06:54:11.650Z, thread-id=371, tx_id=4BA71B4F33686A745BF5E99B16B0369C3485AE76EF14D0B07B9D42500132D711}
[INFO ] 2020-03-05T06:54:11,674Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=c48ad324-cd40-42e8-89a3-8425a5ff1198, invocation_id=6252ec75-accc-4e89-bd20-7e61eab28638, invocation_timestamp=2020-03-05T06:54:11.650Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6252ec75-accc-4e89-bd20-7e61eab28638, session_timestamp=2020-03-05T06:54:11.650Z, thread-id=371, tx_id=4BA71B4F33686A745BF5E99B16B0369C3485AE76EF14D0B07B9D42500132D711}
[INFO ] 2020-03-05T06:54:11,744Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=888b0ec9-7c2a-4889-a1d7-de89d6777f36, invocation_id=b3e9258b-33b8-4beb-97f7-235a29873e37, invocation_timestamp=2020-03-05T06:54:09.514Z, origin=Only For Testing, session_id=b3e9258b-33b8-4beb-97f7-235a29873e37, session_timestamp=2020-03-05T06:54:09.514Z, thread-id=371, tx_id=4BA71B4F33686A745BF5E99B16B0369C3485AE76EF14D0B07B9D42500132D711}
[INFO ] 2020-03-05T06:54:11,744Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=888b0ec9-7c2a-4889-a1d7-de89d6777f36, invocation_id=b3e9258b-33b8-4beb-97f7-235a29873e37, invocation_timestamp=2020-03-05T06:54:09.514Z, origin=Only For Testing, session_id=b3e9258b-33b8-4beb-97f7-235a29873e37, session_timestamp=2020-03-05T06:54:09.514Z, thread-id=371, tx_id=4BA71B4F33686A745BF5E99B16B0369C3485AE76EF14D0B07B9D42500132D711}
[INFO ] 2020-03-05T06:54:11,757Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=888b0ec9-7c2a-4889-a1d7-de89d6777f36, invocation_id=b3e9258b-33b8-4beb-97f7-235a29873e37, invocation_timestamp=2020-03-05T06:54:09.514Z, origin=Only For Testing, session_id=b3e9258b-33b8-4beb-97f7-235a29873e37, session_timestamp=2020-03-05T06:54:09.514Z, thread-id=371, tx_id=4BA71B4F33686A745BF5E99B16B0369C3485AE76EF14D0B07B9D42500132D711}
[INFO ] 2020-03-05T06:54:11,776Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=c48ad324-cd40-42e8-89a3-8425a5ff1198, invocation_id=6252ec75-accc-4e89-bd20-7e61eab28638, invocation_timestamp=2020-03-05T06:54:11.650Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6252ec75-accc-4e89-bd20-7e61eab28638, session_timestamp=2020-03-05T06:54:11.650Z, thread-id=371, tx_id=4BA71B4F33686A745BF5E99B16B0369C3485AE76EF14D0B07B9D42500132D711}
[INFO ] 2020-03-05T06:54:11,786Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=c48ad324-cd40-42e8-89a3-8425a5ff1198, invocation_id=6252ec75-accc-4e89-bd20-7e61eab28638, invocation_timestamp=2020-03-05T06:54:11.650Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6252ec75-accc-4e89-bd20-7e61eab28638, session_timestamp=2020-03-05T06:54:11.650Z, thread-id=371, tx_id=4BA71B4F33686A745BF5E99B16B0369C3485AE76EF14D0B07B9D42500132D711}
[INFO ] 2020-03-05T06:54:11,790Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=c48ad324-cd40-42e8-89a3-8425a5ff1198, invocation_id=6252ec75-accc-4e89-bd20-7e61eab28638, invocation_timestamp=2020-03-05T06:54:11.650Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6252ec75-accc-4e89-bd20-7e61eab28638, session_timestamp=2020-03-05T06:54:11.650Z, thread-id=371, tx_id=4BA71B4F33686A745BF5E99B16B0369C3485AE76EF14D0B07B9D42500132D711}
[INFO ] 2020-03-05T06:54:11,796Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=c48ad324-cd40-42e8-89a3-8425a5ff1198, invocation_id=6252ec75-accc-4e89-bd20-7e61eab28638, invocation_timestamp=2020-03-05T06:54:11.650Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6252ec75-accc-4e89-bd20-7e61eab28638, session_timestamp=2020-03-05T06:54:11.650Z, thread-id=371, tx_id=4BA71B4F33686A745BF5E99B16B0369C3485AE76EF14D0B07B9D42500132D711}
[INFO ] 2020-03-05T06:54:11,805Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=888b0ec9-7c2a-4889-a1d7-de89d6777f36, invocation_id=b3e9258b-33b8-4beb-97f7-235a29873e37, invocation_timestamp=2020-03-05T06:54:09.514Z, origin=Only For Testing, session_id=b3e9258b-33b8-4beb-97f7-235a29873e37, session_timestamp=2020-03-05T06:54:09.514Z, thread-id=371, tx_id=4BA71B4F33686A745BF5E99B16B0369C3485AE76EF14D0B07B9D42500132D711}
[INFO ] 2020-03-05T06:54:11,805Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=888b0ec9-7c2a-4889-a1d7-de89d6777f36, invocation_id=b3e9258b-33b8-4beb-97f7-235a29873e37, invocation_timestamp=2020-03-05T06:54:09.514Z, origin=Only For Testing, session_id=b3e9258b-33b8-4beb-97f7-235a29873e37, session_timestamp=2020-03-05T06:54:09.514Z, thread-id=371, tx_id=4BA71B4F33686A745BF5E99B16B0369C3485AE76EF14D0B07B9D42500132D711}
[INFO ] 2020-03-05T06:54:11,891Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065411.835/nodes/0/cordapps] {}
[INFO ] 2020-03-05T06:54:11,892Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065411.835/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065411.835/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:54:11,892Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065411.835/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:54:11,899Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065411.835/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:54:11,951Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:54:11,955Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:54:11,966Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:54:11.835Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:54:12,388Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:12,389Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065411.835/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:12,389Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:12,414Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:12,419Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:12,419Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:12,525Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:12,534Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:12,535Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:12,536Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:12,536Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:12,617Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:12,638Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:54:12,646Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:54:12,646Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:54:12,729Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:54:12,734Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:54:12,734Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391252734) {}
[INFO ] 2020-03-05T06:54:12,736Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:54:12,752Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391252734) {}
[INFO ] 2020-03-05T06:54:12,760Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:54:12,778Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391252734) {}
[INFO ] 2020-03-05T06:54:12,785Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:12,801Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37E651A75F64C55F5DC1DB04D58CAEA92EA244387153D4D1A7D5271DC245F151 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:54:12,803Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-03-05T06:54:12,803Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-03-05T06:54:12,811Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391252734) {}
[INFO ] 2020-03-05T06:54:12,814Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391252734) {}
[INFO ] 2020-03-05T06:54:12,814Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:12,814Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391252734) {}
[INFO ] 2020-03-05T06:54:12,814Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:12,820Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065411.835/nodes/1/cordapps] {}
[INFO ] 2020-03-05T06:54:12,821Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065411.835/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065411.835/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:54:12,821Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065411.835/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:54:12,825Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065411.835/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:54:12,839Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:54:12,862Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:54:12,865Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:54:11.835Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:54:13,252Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:13,253Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065411.835/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:13,253Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:13,262Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:13,264Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:13,264Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:13,328Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:13,346Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:13,349Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:13,349Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:13,349Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:13,420Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:13,427Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:54:13,428Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:13,428Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:13,519Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:13,520Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:54:13,534Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:54:13,535Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391253535) {}
[INFO ] 2020-03-05T06:54:13,536Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:13,541Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391253535) {}
[INFO ] 2020-03-05T06:54:13,545Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:54:13,561Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391253535) {}
[INFO ] 2020-03-05T06:54:13,567Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:13,574Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37E651A75F64C55F5DC1DB04D58CAEA92EA244387153D4D1A7D5271DC245F151 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:54:13,579Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391253535) {}
[INFO ] 2020-03-05T06:54:13,583Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391252734) {}
[INFO ] 2020-03-05T06:54:13,584Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:54:13,589Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391253535) {}
[INFO ] 2020-03-05T06:54:13,590Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:13,596Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391253535) {}
[INFO ] 2020-03-05T06:54:13,596Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:13,597Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391253535) {}
[INFO ] 2020-03-05T06:54:13,598Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:13,601Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065411.835/nodes/2/cordapps] {}
[INFO ] 2020-03-05T06:54:13,601Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065411.835/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065411.835/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:54:13,602Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065411.835/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:54:13,606Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065411.835/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:54:13,628Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:54:13,650Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:54:13,653Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:54:11.835Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:54:13,939Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:13,940Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065411.835/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:13,940Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:13,946Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:13,947Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:13,947Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:13,992Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:13,997Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:13,998Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:13,999Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:13,999Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:14,034Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:14,038Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:54:14,039Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:14,039Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:14,173Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:14,174Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:54:14,186Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:54:14,186Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391254186) {}
[INFO ] 2020-03-05T06:54:14,187Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:14,191Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391254186) {}
[INFO ] 2020-03-05T06:54:14,194Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:54:14,210Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391254186) {}
[INFO ] 2020-03-05T06:54:14,228Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:14,251Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37E651A75F64C55F5DC1DB04D58CAEA92EA244387153D4D1A7D5271DC245F151 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:54:14,259Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391254186) {}
[INFO ] 2020-03-05T06:54:14,261Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391252734) {}
[INFO ] 2020-03-05T06:54:14,262Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:54:14,274Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391254186) {}
[INFO ] 2020-03-05T06:54:14,275Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:14,284Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391253535) {}
[INFO ] 2020-03-05T06:54:14,285Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:14,299Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391254186) {}
[INFO ] 2020-03-05T06:54:14,300Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:14,305Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391254186) {}
[INFO ] 2020-03-05T06:54:14,305Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:14,306Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391254186) {}
[INFO ] 2020-03-05T06:54:14,306Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-03-05T06:54:14,306Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:54:14,306Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-03-05T06:54:14,306Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:54:14,306Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:54:16,458Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=f9dc31ec-eccb-4a55-8580-d930096ab747, invocation_id=9a57b841-6636-4f38-a562-65ec77ab122f, invocation_timestamp=2020-03-05T06:54:16.443Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a57b841-6636-4f38-a562-65ec77ab122f, session_timestamp=2020-03-05T06:54:16.443Z, thread-id=445, tx_id=6A740E8513B906A80342E1C9A29654961572A39372608ED4AC0DD4BA5C7F3814}
[INFO ] 2020-03-05T06:54:16,469Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=f9dc31ec-eccb-4a55-8580-d930096ab747, invocation_id=9a57b841-6636-4f38-a562-65ec77ab122f, invocation_timestamp=2020-03-05T06:54:16.443Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a57b841-6636-4f38-a562-65ec77ab122f, session_timestamp=2020-03-05T06:54:16.443Z, thread-id=445, tx_id=6A740E8513B906A80342E1C9A29654961572A39372608ED4AC0DD4BA5C7F3814}
[INFO ] 2020-03-05T06:54:16,539Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=7f255c45-6496-46fc-91a0-7206e7fa1faa, invocation_id=4df59a3f-c2cb-41d0-8764-a4b79a8126c0, invocation_timestamp=2020-03-05T06:54:14.314Z, origin=Only For Testing, session_id=4df59a3f-c2cb-41d0-8764-a4b79a8126c0, session_timestamp=2020-03-05T06:54:14.314Z, thread-id=445, tx_id=6A740E8513B906A80342E1C9A29654961572A39372608ED4AC0DD4BA5C7F3814}
[INFO ] 2020-03-05T06:54:16,539Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=7f255c45-6496-46fc-91a0-7206e7fa1faa, invocation_id=4df59a3f-c2cb-41d0-8764-a4b79a8126c0, invocation_timestamp=2020-03-05T06:54:14.314Z, origin=Only For Testing, session_id=4df59a3f-c2cb-41d0-8764-a4b79a8126c0, session_timestamp=2020-03-05T06:54:14.314Z, thread-id=445, tx_id=6A740E8513B906A80342E1C9A29654961572A39372608ED4AC0DD4BA5C7F3814}
[INFO ] 2020-03-05T06:54:16,551Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=7f255c45-6496-46fc-91a0-7206e7fa1faa, invocation_id=4df59a3f-c2cb-41d0-8764-a4b79a8126c0, invocation_timestamp=2020-03-05T06:54:14.314Z, origin=Only For Testing, session_id=4df59a3f-c2cb-41d0-8764-a4b79a8126c0, session_timestamp=2020-03-05T06:54:14.314Z, thread-id=445, tx_id=6A740E8513B906A80342E1C9A29654961572A39372608ED4AC0DD4BA5C7F3814}
[INFO ] 2020-03-05T06:54:16,569Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=f9dc31ec-eccb-4a55-8580-d930096ab747, invocation_id=9a57b841-6636-4f38-a562-65ec77ab122f, invocation_timestamp=2020-03-05T06:54:16.443Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a57b841-6636-4f38-a562-65ec77ab122f, session_timestamp=2020-03-05T06:54:16.443Z, thread-id=445, tx_id=6A740E8513B906A80342E1C9A29654961572A39372608ED4AC0DD4BA5C7F3814}
[INFO ] 2020-03-05T06:54:16,577Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=f9dc31ec-eccb-4a55-8580-d930096ab747, invocation_id=9a57b841-6636-4f38-a562-65ec77ab122f, invocation_timestamp=2020-03-05T06:54:16.443Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a57b841-6636-4f38-a562-65ec77ab122f, session_timestamp=2020-03-05T06:54:16.443Z, thread-id=445, tx_id=6A740E8513B906A80342E1C9A29654961572A39372608ED4AC0DD4BA5C7F3814}
[INFO ] 2020-03-05T06:54:16,581Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=f9dc31ec-eccb-4a55-8580-d930096ab747, invocation_id=9a57b841-6636-4f38-a562-65ec77ab122f, invocation_timestamp=2020-03-05T06:54:16.443Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a57b841-6636-4f38-a562-65ec77ab122f, session_timestamp=2020-03-05T06:54:16.443Z, thread-id=445, tx_id=6A740E8513B906A80342E1C9A29654961572A39372608ED4AC0DD4BA5C7F3814}
[INFO ] 2020-03-05T06:54:16,586Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=f9dc31ec-eccb-4a55-8580-d930096ab747, invocation_id=9a57b841-6636-4f38-a562-65ec77ab122f, invocation_timestamp=2020-03-05T06:54:16.443Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a57b841-6636-4f38-a562-65ec77ab122f, session_timestamp=2020-03-05T06:54:16.443Z, thread-id=445, tx_id=6A740E8513B906A80342E1C9A29654961572A39372608ED4AC0DD4BA5C7F3814}
[INFO ] 2020-03-05T06:54:16,596Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=7f255c45-6496-46fc-91a0-7206e7fa1faa, invocation_id=4df59a3f-c2cb-41d0-8764-a4b79a8126c0, invocation_timestamp=2020-03-05T06:54:14.314Z, origin=Only For Testing, session_id=4df59a3f-c2cb-41d0-8764-a4b79a8126c0, session_timestamp=2020-03-05T06:54:14.314Z, thread-id=445, tx_id=6A740E8513B906A80342E1C9A29654961572A39372608ED4AC0DD4BA5C7F3814}
[INFO ] 2020-03-05T06:54:16,596Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=7f255c45-6496-46fc-91a0-7206e7fa1faa, invocation_id=4df59a3f-c2cb-41d0-8764-a4b79a8126c0, invocation_timestamp=2020-03-05T06:54:14.314Z, origin=Only For Testing, session_id=4df59a3f-c2cb-41d0-8764-a4b79a8126c0, session_timestamp=2020-03-05T06:54:14.314Z, thread-id=445, tx_id=6A740E8513B906A80342E1C9A29654961572A39372608ED4AC0DD4BA5C7F3814}
[INFO ] 2020-03-05T06:54:16,744Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065416.711/nodes/0/cordapps] {}
[INFO ] 2020-03-05T06:54:16,744Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065416.711/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065416.711/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:54:16,744Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065416.711/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:54:16,748Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065416.711/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:54:16,761Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:54:16,764Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:54:16,767Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:54:16.711Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:54:17,211Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:17,212Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065416.711/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:17,212Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:17,226Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:17,227Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:17,227Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:17,311Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:17,316Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:17,317Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:17,318Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:17,318Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:17,353Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:17,366Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:54:17,372Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:54:17,372Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:54:17,509Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:54:17,513Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:54:17,513Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391257513) {}
[INFO ] 2020-03-05T06:54:17,518Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:54:17,531Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391257513) {}
[INFO ] 2020-03-05T06:54:17,538Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:54:17,556Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391257513) {}
[INFO ] 2020-03-05T06:54:17,565Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:17,583Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37E651A75F64C55F5DC1DB04D58CAEA92EA244387153D4D1A7D5271DC245F151 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:54:17,585Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-03-05T06:54:17,586Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-03-05T06:54:17,592Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391257513) {}
[INFO ] 2020-03-05T06:54:17,594Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391257513) {}
[INFO ] 2020-03-05T06:54:17,594Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:17,594Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391257513) {}
[INFO ] 2020-03-05T06:54:17,594Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:17,598Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065416.711/nodes/1/cordapps] {}
[INFO ] 2020-03-05T06:54:17,599Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065416.711/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065416.711/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:54:17,600Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065416.711/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:54:17,604Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065416.711/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:54:17,618Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:54:17,636Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:54:17,640Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:54:16.711Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:54:17,926Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:17,927Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065416.711/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:17,927Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:17,934Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:17,935Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:17,935Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:17,993Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:17,999Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:18,000Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:18,000Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:18,001Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:18,072Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:18,076Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:54:18,076Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:18,076Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:18,178Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:18,179Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:54:18,195Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:54:18,195Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391258195) {}
[INFO ] 2020-03-05T06:54:18,196Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:18,202Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391258195) {}
[INFO ] 2020-03-05T06:54:18,206Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:54:18,224Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391258195) {}
[INFO ] 2020-03-05T06:54:18,235Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:18,247Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37E651A75F64C55F5DC1DB04D58CAEA92EA244387153D4D1A7D5271DC245F151 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:54:18,254Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391258195) {}
[INFO ] 2020-03-05T06:54:18,256Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391257513) {}
[INFO ] 2020-03-05T06:54:18,257Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:54:18,272Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391258195) {}
[INFO ] 2020-03-05T06:54:18,273Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:18,279Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391258195) {}
[INFO ] 2020-03-05T06:54:18,284Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:18,284Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391258195) {}
[INFO ] 2020-03-05T06:54:18,284Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:18,291Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065416.711/nodes/2/cordapps] {}
[INFO ] 2020-03-05T06:54:18,292Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065416.711/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065416.711/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:54:18,292Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065416.711/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:54:18,297Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-java/build/mock-network/20200305-065416.711/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:54:18,311Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:54:18,327Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:54:18,329Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:54:16.711Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:54:18,656Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:18,658Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065416.711/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:18,658Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:18,668Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:18,669Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:18,669Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:18,778Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:18,785Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:18,793Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:18,797Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:18,797Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:18,871Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:54:18,887Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:54:18,887Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:18,887Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:18,974Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:54:18,974Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:54:18,987Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:54:18,987Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391258987) {}
[INFO ] 2020-03-05T06:54:18,988Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:18,992Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391258987) {}
[INFO ] 2020-03-05T06:54:18,995Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:54:19,027Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391258987) {}
[INFO ] 2020-03-05T06:54:19,034Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:19,053Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=37E651A75F64C55F5DC1DB04D58CAEA92EA244387153D4D1A7D5271DC245F151 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:54:19,063Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391258987) {}
[INFO ] 2020-03-05T06:54:19,065Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391257513) {}
[INFO ] 2020-03-05T06:54:19,066Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:54:19,072Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391258987) {}
[INFO ] 2020-03-05T06:54:19,074Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:19,083Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391258195) {}
[INFO ] 2020-03-05T06:54:19,085Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:19,091Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391258987) {}
[INFO ] 2020-03-05T06:54:19,094Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:54:19,101Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391258987) {}
[INFO ] 2020-03-05T06:54:19,102Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:54:19,103Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391258987) {}
[INFO ] 2020-03-05T06:54:19,103Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-03-05T06:54:19,104Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:54:19,104Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-03-05T06:54:19,105Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:54:19,106Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:54:21,343Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=a31efeb7-7273-4af6-b424-daaa7f9eeb91, invocation_id=3e4ff0ea-62b1-4f41-8102-e57e62ac212e, invocation_timestamp=2020-03-05T06:54:21.328Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e4ff0ea-62b1-4f41-8102-e57e62ac212e, session_timestamp=2020-03-05T06:54:21.328Z, thread-id=519, tx_id=47AA3C9057824D23C6E9B64DADFAAB6EB778B378A30C4E72698BC08E4AC30440}
[INFO ] 2020-03-05T06:54:21,354Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=a31efeb7-7273-4af6-b424-daaa7f9eeb91, invocation_id=3e4ff0ea-62b1-4f41-8102-e57e62ac212e, invocation_timestamp=2020-03-05T06:54:21.328Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e4ff0ea-62b1-4f41-8102-e57e62ac212e, session_timestamp=2020-03-05T06:54:21.328Z, thread-id=519, tx_id=47AA3C9057824D23C6E9B64DADFAAB6EB778B378A30C4E72698BC08E4AC30440}
[INFO ] 2020-03-05T06:54:21,437Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=b44e10e5-462b-4e2b-a1bf-bfb11e571c97, invocation_id=01f7b1be-5f0c-444d-83e6-b30a8c3dde41, invocation_timestamp=2020-03-05T06:54:19.107Z, origin=Only For Testing, session_id=01f7b1be-5f0c-444d-83e6-b30a8c3dde41, session_timestamp=2020-03-05T06:54:19.107Z, thread-id=519, tx_id=47AA3C9057824D23C6E9B64DADFAAB6EB778B378A30C4E72698BC08E4AC30440}
[INFO ] 2020-03-05T06:54:21,437Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=b44e10e5-462b-4e2b-a1bf-bfb11e571c97, invocation_id=01f7b1be-5f0c-444d-83e6-b30a8c3dde41, invocation_timestamp=2020-03-05T06:54:19.107Z, origin=Only For Testing, session_id=01f7b1be-5f0c-444d-83e6-b30a8c3dde41, session_timestamp=2020-03-05T06:54:19.107Z, thread-id=519, tx_id=47AA3C9057824D23C6E9B64DADFAAB6EB778B378A30C4E72698BC08E4AC30440}
[INFO ] 2020-03-05T06:54:21,461Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=b44e10e5-462b-4e2b-a1bf-bfb11e571c97, invocation_id=01f7b1be-5f0c-444d-83e6-b30a8c3dde41, invocation_timestamp=2020-03-05T06:54:19.107Z, origin=Only For Testing, session_id=01f7b1be-5f0c-444d-83e6-b30a8c3dde41, session_timestamp=2020-03-05T06:54:19.107Z, thread-id=519, tx_id=47AA3C9057824D23C6E9B64DADFAAB6EB778B378A30C4E72698BC08E4AC30440}
[INFO ] 2020-03-05T06:54:21,484Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=a31efeb7-7273-4af6-b424-daaa7f9eeb91, invocation_id=3e4ff0ea-62b1-4f41-8102-e57e62ac212e, invocation_timestamp=2020-03-05T06:54:21.328Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e4ff0ea-62b1-4f41-8102-e57e62ac212e, session_timestamp=2020-03-05T06:54:21.328Z, thread-id=519, tx_id=47AA3C9057824D23C6E9B64DADFAAB6EB778B378A30C4E72698BC08E4AC30440}
[INFO ] 2020-03-05T06:54:21,498Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=a31efeb7-7273-4af6-b424-daaa7f9eeb91, invocation_id=3e4ff0ea-62b1-4f41-8102-e57e62ac212e, invocation_timestamp=2020-03-05T06:54:21.328Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e4ff0ea-62b1-4f41-8102-e57e62ac212e, session_timestamp=2020-03-05T06:54:21.328Z, thread-id=519, tx_id=47AA3C9057824D23C6E9B64DADFAAB6EB778B378A30C4E72698BC08E4AC30440}
[INFO ] 2020-03-05T06:54:21,502Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000011, flow-id=a31efeb7-7273-4af6-b424-daaa7f9eeb91, invocation_id=3e4ff0ea-62b1-4f41-8102-e57e62ac212e, invocation_timestamp=2020-03-05T06:54:21.328Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e4ff0ea-62b1-4f41-8102-e57e62ac212e, session_timestamp=2020-03-05T06:54:21.328Z, thread-id=519, tx_id=47AA3C9057824D23C6E9B64DADFAAB6EB778B378A30C4E72698BC08E4AC30440}
[INFO ] 2020-03-05T06:54:21,507Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000011, flow-id=a31efeb7-7273-4af6-b424-daaa7f9eeb91, invocation_id=3e4ff0ea-62b1-4f41-8102-e57e62ac212e, invocation_timestamp=2020-03-05T06:54:21.328Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e4ff0ea-62b1-4f41-8102-e57e62ac212e, session_timestamp=2020-03-05T06:54:21.328Z, thread-id=519, tx_id=47AA3C9057824D23C6E9B64DADFAAB6EB778B378A30C4E72698BC08E4AC30440}
[INFO ] 2020-03-05T06:54:21,517Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=b44e10e5-462b-4e2b-a1bf-bfb11e571c97, invocation_id=01f7b1be-5f0c-444d-83e6-b30a8c3dde41, invocation_timestamp=2020-03-05T06:54:19.107Z, origin=Only For Testing, session_id=01f7b1be-5f0c-444d-83e6-b30a8c3dde41, session_timestamp=2020-03-05T06:54:19.107Z, thread-id=519, tx_id=47AA3C9057824D23C6E9B64DADFAAB6EB778B378A30C4E72698BC08E4AC30440}
[INFO ] 2020-03-05T06:54:21,517Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=b44e10e5-462b-4e2b-a1bf-bfb11e571c97, invocation_id=01f7b1be-5f0c-444d-83e6-b30a8c3dde41, invocation_timestamp=2020-03-05T06:54:19.107Z, origin=Only For Testing, session_id=01f7b1be-5f0c-444d-83e6-b30a8c3dde41, session_timestamp=2020-03-05T06:54:19.107Z, thread-id=519, tx_id=47AA3C9057824D23C6E9B64DADFAAB6EB778B378A30C4E72698BC08E4AC30440}
