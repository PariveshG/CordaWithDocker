[INFO ] 2020-03-05T06:54:30,052Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_55829bba-b45a-438e-8037-2ecd8f50e62f.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_c322dd71-5f5e-4006-bb29-59d66b741a8b.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:54:30,275Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_55829bba-b45a-438e-8037-2ecd8f50e62f.jar {}
[INFO ] 2020-03-05T06:54:30,584Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_c322dd71-5f5e-4006-bb29-59d66b741a8b.jar {}
[ERROR] 2020-03-05T06:54:37,489Z [Test worker] internal.Verifier. - Error validating transaction A780ADFEE43856F007AF7ECA7DECAA87552C9FF31DB9AC5DB1DE971E9EF6E1E4. [errorCode=1dpk8h1, moreInformationAt=https://errors.corda.net/OS/4.3/1dpk8h1] {}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at com.example.contract.IOUContract.verify(IOUContract.kt:70) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$cannot create negative-value IOUs$1$1.invoke(IOUContractTests.kt:92) ~[test/:?]
	at com.example.test.contract.IOUContractTests$cannot create negative-value IOUs$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$cannot create negative-value IOUs$1.invoke(IOUContractTests.kt:89) ~[test/:?]
	at com.example.test.contract.IOUContractTests$cannot create negative-value IOUs$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.cannot create negative-value IOUs(IOUContractTests.kt:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:54:37,508Z [Test worker] internal.Verifier. - Error validating transaction A780ADFEE43856F007AF7ECA7DECAA87552C9FF31DB9AC5DB1DE971E9EF6E1E4. [errorCode=1dpk8h1, moreInformationAt=https://errors.corda.net/OS/4.3/1dpk8h1] {}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at com.example.contract.IOUContract.verify(IOUContract.kt:70) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$cannot create negative-value IOUs$1$1.invoke(IOUContractTests.kt:92) ~[test/:?]
	at com.example.test.contract.IOUContractTests$cannot create negative-value IOUs$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$cannot create negative-value IOUs$1.invoke(IOUContractTests.kt:89) ~[test/:?]
	at com.example.test.contract.IOUContractTests$cannot create negative-value IOUs$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.cannot create negative-value IOUs(IOUContractTests.kt:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:54:37,562Z [Test worker] internal.Verifier. - Error validating transaction A780ADFEE43856F007AF7ECA7DECAA87552C9FF31DB9AC5DB1DE971E9EF6E1E4. [errorCode=1dpk8h1, moreInformationAt=https://errors.corda.net/OS/4.3/1dpk8h1] {}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at com.example.contract.IOUContract.verify(IOUContract.kt:70) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:298) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$cannot create negative-value IOUs$1.invoke(IOUContractTests.kt:89) ~[test/:?]
	at com.example.test.contract.IOUContractTests$cannot create negative-value IOUs$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.cannot create negative-value IOUs(IOUContractTests.kt:88) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[INFO ] 2020-03-05T06:54:37,565Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_55829bba-b45a-438e-8037-2ecd8f50e62f.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_c322dd71-5f5e-4006-bb29-59d66b741a8b.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:54:37,565Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_55829bba-b45a-438e-8037-2ecd8f50e62f.jar {}
[INFO ] 2020-03-05T06:54:37,613Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_c322dd71-5f5e-4006-bb29-59d66b741a8b.jar {}
[WARN ] 2020-03-05T06:54:37,622Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Contract: custom-cordapp, Workflow: custom-cordapp, file: custom-cordapp_1_5_55829bba-b45a-438e-8037-2ecd8f50e62f) is installed multiple times on the node. The following files correspond to the exact same content: [custom-cordapp_1_5_55829bba-b45a-438e-8037-2ecd8f50e62f] {}
[WARN ] 2020-03-05T06:54:37,623Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Contract: custom-cordapp, Workflow: custom-cordapp, file: custom-cordapp_1_5_c322dd71-5f5e-4006-bb29-59d66b741a8b) is installed multiple times on the node. The following files correspond to the exact same content: [custom-cordapp_1_5_c322dd71-5f5e-4006-bb29-59d66b741a8b] {}
[ERROR] 2020-03-05T06:54:40,381Z [Test worker] internal.Verifier. - Error validating transaction C0B6F25A46C14E99BE95200B736795B8D707F30A82744078F315FECB2CF662BF. [errorCode=1dpk8h1, moreInformationAt=https://errors.corda.net/OS/4.3/1dpk8h1] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at com.example.contract.IOUContract.verify(IOUContract.kt:68) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$lender must sign transaction$1$1.invoke(IOUContractTests.kt:59) ~[test/:?]
	at com.example.test.contract.IOUContractTests$lender must sign transaction$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$lender must sign transaction$1.invoke(IOUContractTests.kt:56) ~[test/:?]
	at com.example.test.contract.IOUContractTests$lender must sign transaction$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lender must sign transaction(IOUContractTests.kt:55) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:54:40,392Z [Test worker] internal.Verifier. - Error validating transaction C0B6F25A46C14E99BE95200B736795B8D707F30A82744078F315FECB2CF662BF. [errorCode=1dpk8h1, moreInformationAt=https://errors.corda.net/OS/4.3/1dpk8h1] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at com.example.contract.IOUContract.verify(IOUContract.kt:68) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$lender must sign transaction$1$1.invoke(IOUContractTests.kt:59) ~[test/:?]
	at com.example.test.contract.IOUContractTests$lender must sign transaction$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$lender must sign transaction$1.invoke(IOUContractTests.kt:56) ~[test/:?]
	at com.example.test.contract.IOUContractTests$lender must sign transaction$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lender must sign transaction(IOUContractTests.kt:55) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:54:40,432Z [Test worker] internal.Verifier. - Error validating transaction C0B6F25A46C14E99BE95200B736795B8D707F30A82744078F315FECB2CF662BF. [errorCode=1dpk8h1, moreInformationAt=https://errors.corda.net/OS/4.3/1dpk8h1] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at com.example.contract.IOUContract.verify(IOUContract.kt:68) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:298) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$lender must sign transaction$1.invoke(IOUContractTests.kt:56) ~[test/:?]
	at com.example.test.contract.IOUContractTests$lender must sign transaction$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lender must sign transaction(IOUContractTests.kt:55) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[INFO ] 2020-03-05T06:54:40,436Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_55829bba-b45a-438e-8037-2ecd8f50e62f.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_c322dd71-5f5e-4006-bb29-59d66b741a8b.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:54:40,436Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_55829bba-b45a-438e-8037-2ecd8f50e62f.jar {}
[INFO ] 2020-03-05T06:54:40,463Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_c322dd71-5f5e-4006-bb29-59d66b741a8b.jar {}
[ERROR] 2020-03-05T06:54:43,081Z [Test worker] internal.Verifier. - Error validating transaction 5FD4B02F79A76989BB1A4F9330F7695741B85DC5F5707302FB9CFC47C80477D2. [errorCode=1dpk8h1, moreInformationAt=https://errors.corda.net/OS/4.3/1dpk8h1] {}
java.lang.IllegalArgumentException: Failed requirement: Only one output state should be created.
	at com.example.contract.IOUContract.verify(IOUContract.kt:59) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have one output$1$1.invoke(IOUContractTests.kt:48) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have one output$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have one output$1.invoke(IOUContractTests.kt:44) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have one output$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.transaction must have one output(IOUContractTests.kt:43) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:54:43,095Z [Test worker] internal.Verifier. - Error validating transaction 5FD4B02F79A76989BB1A4F9330F7695741B85DC5F5707302FB9CFC47C80477D2. [errorCode=1dpk8h1, moreInformationAt=https://errors.corda.net/OS/4.3/1dpk8h1] {}
java.lang.IllegalArgumentException: Failed requirement: Only one output state should be created.
	at com.example.contract.IOUContract.verify(IOUContract.kt:59) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have one output$1$1.invoke(IOUContractTests.kt:48) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have one output$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have one output$1.invoke(IOUContractTests.kt:44) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have one output$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.transaction must have one output(IOUContractTests.kt:43) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:54:43,147Z [Test worker] internal.Verifier. - Error validating transaction 5FD4B02F79A76989BB1A4F9330F7695741B85DC5F5707302FB9CFC47C80477D2. [errorCode=1dpk8h1, moreInformationAt=https://errors.corda.net/OS/4.3/1dpk8h1] {}
java.lang.IllegalArgumentException: Failed requirement: Only one output state should be created.
	at com.example.contract.IOUContract.verify(IOUContract.kt:59) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:298) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have one output$1.invoke(IOUContractTests.kt:44) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have one output$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.transaction must have one output(IOUContractTests.kt:43) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[INFO ] 2020-03-05T06:54:43,148Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_55829bba-b45a-438e-8037-2ecd8f50e62f.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_c322dd71-5f5e-4006-bb29-59d66b741a8b.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:54:43,149Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_55829bba-b45a-438e-8037-2ecd8f50e62f.jar {}
[INFO ] 2020-03-05T06:54:43,182Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_c322dd71-5f5e-4006-bb29-59d66b741a8b.jar {}
[WARN ] 2020-03-05T06:54:43,327Z [Test worker] contracts.AttachmentConstraint. - Found state com.example.contract.IOUContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[ERROR] 2020-03-05T06:54:45,435Z [Test worker] internal.Verifier. - Error validating transaction C15A3546020D0B70247A6E68DE13C731320126736B9C0A13CDACC76BCCB45C6C. [errorCode=1o34444, moreInformationAt=https://errors.corda.net/OS/4.3/1o34444] {}
java.lang.IllegalStateException: Required com.example.contract.IOUContract.Commands.Create command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:81) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.kt:55) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:298) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:336) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1$1.invoke(IOUContractTests.kt:33) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1.invoke(IOUContractTests.kt:32) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.transaction must have no inputs(IOUContractTests.kt:31) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:54:45,636Z [Test worker] internal.Verifier. - Error validating transaction 39BC03722A8715DB09772D359E74BC26B724E5449F0E320F053E27258F5832C3. [errorCode=1dpk8h1, moreInformationAt=https://errors.corda.net/OS/4.3/1dpk8h1] {}
java.lang.IllegalArgumentException: Failed requirement: No inputs should be consumed when issuing an IOU.
	at com.example.contract.IOUContract.verify(IOUContract.kt:57) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1$1.invoke(IOUContractTests.kt:36) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1.invoke(IOUContractTests.kt:32) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.transaction must have no inputs(IOUContractTests.kt:31) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:54:45,659Z [Test worker] internal.Verifier. - Error validating transaction 39BC03722A8715DB09772D359E74BC26B724E5449F0E320F053E27258F5832C3. [errorCode=1dpk8h1, moreInformationAt=https://errors.corda.net/OS/4.3/1dpk8h1] {}
java.lang.IllegalArgumentException: Failed requirement: No inputs should be consumed when issuing an IOU.
	at com.example.contract.IOUContract.verify(IOUContract.kt:57) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1$1.invoke(IOUContractTests.kt:36) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1.invoke(IOUContractTests.kt:32) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.transaction must have no inputs(IOUContractTests.kt:31) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:54:45,687Z [Test worker] internal.Verifier. - Error validating transaction 39BC03722A8715DB09772D359E74BC26B724E5449F0E320F053E27258F5832C3. [errorCode=1dpk8h1, moreInformationAt=https://errors.corda.net/OS/4.3/1dpk8h1] {}
java.lang.IllegalArgumentException: Failed requirement: No inputs should be consumed when issuing an IOU.
	at com.example.contract.IOUContract.verify(IOUContract.kt:57) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:298) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1.invoke(IOUContractTests.kt:32) ~[test/:?]
	at com.example.test.contract.IOUContractTests$transaction must have no inputs$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.transaction must have no inputs(IOUContractTests.kt:31) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[INFO ] 2020-03-05T06:54:45,691Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_55829bba-b45a-438e-8037-2ecd8f50e62f.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_c322dd71-5f5e-4006-bb29-59d66b741a8b.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:54:45,691Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_55829bba-b45a-438e-8037-2ecd8f50e62f.jar {}
[INFO ] 2020-03-05T06:54:45,719Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_c322dd71-5f5e-4006-bb29-59d66b741a8b.jar {}
[ERROR] 2020-03-05T06:54:48,046Z [Test worker] internal.Verifier. - Error validating transaction EEDE04474229637347C04F8B3CD1DE651406B140C25AFED5BC6B9B5ED0670F1C. [errorCode=1dpk8h1, moreInformationAt=https://errors.corda.net/OS/4.3/1dpk8h1] {}
java.lang.IllegalArgumentException: Failed requirement: The lender and the borrower cannot be the same entity.
	at com.example.contract.IOUContract.verify(IOUContract.kt:62) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$lender is not borrower$1$1.invoke(IOUContractTests.kt:81) ~[test/:?]
	at com.example.test.contract.IOUContractTests$lender is not borrower$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$lender is not borrower$1.invoke(IOUContractTests.kt:78) ~[test/:?]
	at com.example.test.contract.IOUContractTests$lender is not borrower$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lender is not borrower(IOUContractTests.kt:77) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:54:48,055Z [Test worker] internal.Verifier. - Error validating transaction EEDE04474229637347C04F8B3CD1DE651406B140C25AFED5BC6B9B5ED0670F1C. [errorCode=1dpk8h1, moreInformationAt=https://errors.corda.net/OS/4.3/1dpk8h1] {}
java.lang.IllegalArgumentException: Failed requirement: The lender and the borrower cannot be the same entity.
	at com.example.contract.IOUContract.verify(IOUContract.kt:62) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$lender is not borrower$1$1.invoke(IOUContractTests.kt:81) ~[test/:?]
	at com.example.test.contract.IOUContractTests$lender is not borrower$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$lender is not borrower$1.invoke(IOUContractTests.kt:78) ~[test/:?]
	at com.example.test.contract.IOUContractTests$lender is not borrower$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lender is not borrower(IOUContractTests.kt:77) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:54:48,067Z [Test worker] internal.Verifier. - Error validating transaction EEDE04474229637347C04F8B3CD1DE651406B140C25AFED5BC6B9B5ED0670F1C. [errorCode=1dpk8h1, moreInformationAt=https://errors.corda.net/OS/4.3/1dpk8h1] {}
java.lang.IllegalArgumentException: Failed requirement: The lender and the borrower cannot be the same entity.
	at com.example.contract.IOUContract.verify(IOUContract.kt:62) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:298) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$lender is not borrower$1.invoke(IOUContractTests.kt:78) ~[test/:?]
	at com.example.test.contract.IOUContractTests$lender is not borrower$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lender is not borrower(IOUContractTests.kt:77) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[INFO ] 2020-03-05T06:54:48,070Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_55829bba-b45a-438e-8037-2ecd8f50e62f.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_c322dd71-5f5e-4006-bb29-59d66b741a8b.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:54:48,070Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_55829bba-b45a-438e-8037-2ecd8f50e62f.jar {}
[INFO ] 2020-03-05T06:54:48,120Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_c322dd71-5f5e-4006-bb29-59d66b741a8b.jar {}
[INFO ] 2020-03-05T06:54:50,313Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_55829bba-b45a-438e-8037-2ecd8f50e62f.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_c322dd71-5f5e-4006-bb29-59d66b741a8b.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:54:50,315Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_55829bba-b45a-438e-8037-2ecd8f50e62f.jar {}
[INFO ] 2020-03-05T06:54:50,320Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/generated-custom-cordapps/20200305-065429.388/custom-cordapp_1_5_c322dd71-5f5e-4006-bb29-59d66b741a8b.jar {}
[ERROR] 2020-03-05T06:54:52,546Z [Test worker] internal.Verifier. - Error validating transaction 9FC806019DA9ED3EB75F5DA6070C4A6CBE313AF3117A6DDC5D93ACD0F8C4020F. [errorCode=1dpk8h1, moreInformationAt=https://errors.corda.net/OS/4.3/1dpk8h1] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at com.example.contract.IOUContract.verify(IOUContract.kt:68) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$borrower must sign transaction$1$1.invoke(IOUContractTests.kt:70) ~[test/:?]
	at com.example.test.contract.IOUContractTests$borrower must sign transaction$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$borrower must sign transaction$1.invoke(IOUContractTests.kt:67) ~[test/:?]
	at com.example.test.contract.IOUContractTests$borrower must sign transaction$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.borrower must sign transaction(IOUContractTests.kt:66) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:54:52,553Z [Test worker] internal.Verifier. - Error validating transaction 9FC806019DA9ED3EB75F5DA6070C4A6CBE313AF3117A6DDC5D93ACD0F8C4020F. [errorCode=1dpk8h1, moreInformationAt=https://errors.corda.net/OS/4.3/1dpk8h1] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at com.example.contract.IOUContract.verify(IOUContract.kt:68) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails with(LedgerDSLInterpreter.kt:80) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails with(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails with(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$borrower must sign transaction$1$1.invoke(IOUContractTests.kt:70) ~[test/:?]
	at com.example.test.contract.IOUContractTests$borrower must sign transaction$1$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$borrower must sign transaction$1.invoke(IOUContractTests.kt:67) ~[test/:?]
	at com.example.test.contract.IOUContractTests$borrower must sign transaction$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.borrower must sign transaction(IOUContractTests.kt:66) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[ERROR] 2020-03-05T06:54:52,572Z [Test worker] internal.Verifier. - Error validating transaction 9FC806019DA9ED3EB75F5DA6070C4A6CBE313AF3117A6DDC5D93ACD0F8C4020F. [errorCode=1dpk8h1, moreInformationAt=https://errors.corda.net/OS/4.3/1dpk8h1] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at com.example.contract.IOUContract.verify(IOUContract.kt:68) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:298) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests$borrower must sign transaction$1.invoke(IOUContractTests.kt:67) ~[test/:?]
	at com.example.test.contract.IOUContractTests$borrower must sign transaction$1.invoke(IOUContractTests.kt:11) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.borrower must sign transaction(IOUContractTests.kt:66) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
[INFO ] 2020-03-05T06:54:55,468Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin ... {}
[INFO ] 2020-03-05T06:54:55,781Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-03-05T06:54:57,485Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-03-05T06:54:57,525Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-03-05T06:54:57,606Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-03-05T06:54:57,643Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-03-05T06:54:57,643Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-03-05T06:54:57,643Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-03-05T06:54:57,643Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-03-05T06:54:57,643Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-03-05T06:54:57,643Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-03-05T06:54:57,643Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-03-05T06:54:57,677Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-03-05T06:54:57,677Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-03-05T06:54:57,700Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-03-05T06:54:57,700Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-03-05T06:54:57,701Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-03-05T06:54:57,816Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-03-05T06:54:57,826Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-03-05T06:54:57,836Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-03-05T06:54:57,836Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-03-05T06:54:57,846Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-03-05T06:54:57,847Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-03-05T06:54:57,847Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-03-05T06:54:57,847Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-03-05T06:54:57,847Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-03-05T06:54:57,847Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-03-05T06:54:57,887Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-03-05T06:54:57,887Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-03-05T06:54:57,897Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-03-05T06:54:57,897Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-03-05T06:54:57,918Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-03-05T06:54:57,918Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-03-05T06:54:57,938Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-03-05T06:54:57,938Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-03-05T06:54:57,989Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-03-05T06:54:57,989Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-03-05T06:54:58,033Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-kotlin:kotlinCompilerClasspath {}
[INFO ] 2020-03-05T06:54:58,053Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-03-05T06:54:58,054Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:kotlinCompilerClasspath {}
[INFO ] 2020-03-05T06:54:58,054Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-03-05T06:54:58,083Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-kotlin:kotlinCompilerClasspath {}
[INFO ] 2020-03-05T06:54:58,083Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-03-05T06:54:58,083Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-kotlin:kotlinCompilerClasspath {}
[INFO ] 2020-03-05T06:54:58,083Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-03-05T06:54:58,083Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:54:58,107Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:compileKotlin {}
[INFO ] 2020-03-05T06:54:58,107Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-kotlin:kotlinCompilerClasspath {}
[INFO ] 2020-03-05T06:54:58,107Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:compileKotlin {}
[INFO ] 2020-03-05T06:54:58,168Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-kotlin:kotlinCompilerPluginClasspath {}
[INFO ] 2020-03-05T06:54:58,178Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:compileKotlin {}
[INFO ] 2020-03-05T06:54:58,178Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-kotlin:kotlinCompilerPluginClasspath {}
[INFO ] 2020-03-05T06:54:58,178Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:compileKotlin {}
[INFO ] 2020-03-05T06:54:58,178Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-kotlin:compileClasspath {}
[INFO ] 2020-03-05T06:54:58,300Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:compileKotlin {}
[INFO ] 2020-03-05T06:54:58,300Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-kotlin:compileClasspath {}
[INFO ] 2020-03-05T06:54:58,321Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:compileKotlin {}
[INFO ] 2020-03-05T06:54:59,100Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-kotlin:compileClasspath {}
[INFO ] 2020-03-05T06:54:59,100Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:compileKotlin {}
[INFO ] 2020-03-05T06:54:59,120Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-kotlin:kotlinCompilerPluginClasspath {}
[INFO ] 2020-03-05T06:54:59,120Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:compileKotlin {}
[INFO ] 2020-03-05T06:54:59,131Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:54:59,131Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:compileJava {}
[INFO ] 2020-03-05T06:54:59,131Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:54:59,131Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:processResources {}
[INFO ] 2020-03-05T06:54:59,131Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:54:59,131Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:classes {}
[INFO ] 2020-03-05T06:54:59,131Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:54:59,131Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:configureCordappFatJar {}
[INFO ] 2020-03-05T06:54:59,131Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-kotlin:runtime {}
[INFO ] 2020-03-05T06:54:59,151Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:configureCordappFatJar {}
[INFO ] 2020-03-05T06:54:59,151Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-kotlin:runtime {}
[INFO ] 2020-03-05T06:54:59,161Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:configureCordappFatJar {}
[INFO ] 2020-03-05T06:54:59,161Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:54:59,161Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:inspectClassesForKotlinIC {}
[INFO ] 2020-03-05T06:54:59,161Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:54:59,161Z [Connection worker] internal.TestCordappImpl. - Task :contracts-kotlin:jar {}
[INFO ] 2020-03-05T06:54:59,182Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:54:59,182Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:compileKotlin {}
[INFO ] 2020-03-05T06:54:59,182Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:kotlinCompilerClasspath {}
[INFO ] 2020-03-05T06:54:59,182Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:compileKotlin {}
[INFO ] 2020-03-05T06:54:59,182Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-kotlin:kotlinCompilerPluginClasspath {}
[INFO ] 2020-03-05T06:54:59,182Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:compileKotlin {}
[INFO ] 2020-03-05T06:54:59,182Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:kotlinCompilerPluginClasspath {}
[INFO ] 2020-03-05T06:54:59,182Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:compileKotlin {}
[INFO ] 2020-03-05T06:54:59,182Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-kotlin:compileClasspath {}
[INFO ] 2020-03-05T06:54:59,425Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:compileKotlin {}
[INFO ] 2020-03-05T06:54:59,435Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:compileClasspath {}
[INFO ] 2020-03-05T06:54:59,445Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:compileKotlin {}
[INFO ] 2020-03-05T06:54:59,446Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:compileClasspath {}
[INFO ] 2020-03-05T06:54:59,446Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:compileKotlin {}
[INFO ] 2020-03-05T06:54:59,466Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:kotlinCompilerPluginClasspath {}
[INFO ] 2020-03-05T06:54:59,466Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:compileKotlin {}
[INFO ] 2020-03-05T06:54:59,466Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:54:59,466Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:compileJava {}
[INFO ] 2020-03-05T06:54:59,466Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:54:59,466Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:processResources {}
[INFO ] 2020-03-05T06:54:59,466Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:54:59,466Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:classes {}
[INFO ] 2020-03-05T06:54:59,466Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:54:59,476Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:configureCordappFatJar {}
[INFO ] 2020-03-05T06:54:59,476Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-kotlin:runtime {}
[INFO ] 2020-03-05T06:54:59,517Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:configureCordappFatJar {}
[INFO ] 2020-03-05T06:54:59,517Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:runtime {}
[INFO ] 2020-03-05T06:54:59,527Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:configureCordappFatJar {}
[INFO ] 2020-03-05T06:54:59,527Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:runtime {}
[INFO ] 2020-03-05T06:54:59,527Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:configureCordappFatJar {}
[INFO ] 2020-03-05T06:54:59,527Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:runtime {}
[INFO ] 2020-03-05T06:54:59,527Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:configureCordappFatJar {}
[INFO ] 2020-03-05T06:54:59,527Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:runtime {}
[INFO ] 2020-03-05T06:54:59,537Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:configureCordappFatJar {}
[INFO ] 2020-03-05T06:54:59,537Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:runtime {}
[INFO ] 2020-03-05T06:54:59,538Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:configureCordappFatJar {}
[INFO ] 2020-03-05T06:54:59,538Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:runtime {}
[INFO ] 2020-03-05T06:54:59,538Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:configureCordappFatJar {}
[INFO ] 2020-03-05T06:54:59,538Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-kotlin:runtime {}
[INFO ] 2020-03-05T06:54:59,538Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:configureCordappFatJar {}
[INFO ] 2020-03-05T06:54:59,538Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:54:59,538Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:inspectClassesForKotlinIC {}
[INFO ] 2020-03-05T06:54:59,538Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:54:59,538Z [Connection worker] internal.TestCordappImpl. - Task :workflows-kotlin:jar {}
[INFO ] 2020-03-05T06:54:59,548Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-03-05T06:54:59,548Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-03-05T06:54:59,548Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-kotlin' {}
[INFO ] 2020-03-05T06:54:59,548Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-03-05T06:54:59,551Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-03-05T06:54:59,568Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /home/ubuntu/parivesh/samples/cordapp-example/.gradle {}
[INFO ] 2020-03-05T06:54:59,568Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-03-05T06:54:59,597Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-03-05T06:54:59,842Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065452.629/nodes/0/cordapps] {}
[INFO ] 2020-03-05T06:54:59,846Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065452.629/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065452.629/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:54:59,851Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065452.629/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:54:59,874Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065452.629/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:55:00,746Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:55:00,836Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:55:00,971Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:54:52.606Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:55:07,426Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:07,440Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065452.629/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:07,440Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:07,487Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:07,586Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:07,595Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:10,018Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:10,736Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:10,741Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:10,747Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:10,747Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:10,954Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:10,998Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:55:11,037Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:55:11,037Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:55:11,406Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:55:11,415Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:55:11,417Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391311417) {}
[INFO ] 2020-03-05T06:55:11,425Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:55:11,646Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391311417) {}
[INFO ] 2020-03-05T06:55:11,750Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:55:11,791Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391311417) {}
[INFO ] 2020-03-05T06:55:11,829Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:11,864Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F7E15842EC2F0AC3B16038105728F963B12D451F6AE4BC33DEC7F13DD25403E3 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:55:11,870Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-03-05T06:55:11,874Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-03-05T06:55:12,443Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391311417) {}
[INFO ] 2020-03-05T06:55:12,475Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391311417) {}
[INFO ] 2020-03-05T06:55:12,479Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:12,480Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391311417) {}
[INFO ] 2020-03-05T06:55:12,481Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:12,495Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065452.629/nodes/1/cordapps] {}
[INFO ] 2020-03-05T06:55:12,496Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065452.629/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065452.629/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:55:12,497Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065452.629/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:55:12,516Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065452.629/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[WARN ] 2020-03-05T06:55:12,526Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: CorDapp Example, file: cordapp-example-contracts-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [cordapp-example-contracts-0.1] {}
[WARN ] 2020-03-05T06:55:12,526Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: CorDapp Example, file: cordapp-example-workflows-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [cordapp-example-workflows-0.1] {}
[INFO ] 2020-03-05T06:55:12,553Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:55:12,577Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:55:12,581Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:54:52.606Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:55:13,336Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:13,337Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065452.629/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:13,337Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:13,368Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:13,371Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:13,371Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:13,556Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:13,577Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:13,581Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:13,589Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:13,589Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:13,641Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:13,649Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:55:13,652Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:13,652Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:13,760Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:13,762Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:55:13,781Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:55:13,782Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391313782) {}
[INFO ] 2020-03-05T06:55:13,784Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:13,797Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391313782) {}
[INFO ] 2020-03-05T06:55:13,810Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:55:13,832Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391313782) {}
[INFO ] 2020-03-05T06:55:13,840Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:13,870Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F7E15842EC2F0AC3B16038105728F963B12D451F6AE4BC33DEC7F13DD25403E3 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:55:13,895Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391313782) {}
[INFO ] 2020-03-05T06:55:13,908Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391311417) {}
[INFO ] 2020-03-05T06:55:13,910Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:55:13,933Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391313782) {}
[INFO ] 2020-03-05T06:55:13,937Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:13,960Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391313782) {}
[INFO ] 2020-03-05T06:55:13,961Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:13,962Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391313782) {}
[INFO ] 2020-03-05T06:55:13,963Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:13,968Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065452.629/nodes/2/cordapps] {}
[INFO ] 2020-03-05T06:55:13,970Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065452.629/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065452.629/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:55:13,971Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065452.629/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:55:13,978Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065452.629/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:55:14,005Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:55:14,033Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:55:14,037Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:54:52.606Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:55:14,707Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:14,708Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065452.629/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:14,708Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:14,717Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:14,719Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:14,719Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:14,844Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:14,894Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:14,895Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:14,897Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:14,897Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:14,976Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:14,987Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:55:14,989Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:14,990Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:15,111Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:15,114Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:55:15,141Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:55:15,142Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391315142) {}
[INFO ] 2020-03-05T06:55:15,144Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:15,160Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391315142) {}
[INFO ] 2020-03-05T06:55:15,168Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:55:15,183Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391315142) {}
[INFO ] 2020-03-05T06:55:15,199Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:15,228Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F7E15842EC2F0AC3B16038105728F963B12D451F6AE4BC33DEC7F13DD25403E3 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:55:15,248Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391315142) {}
[INFO ] 2020-03-05T06:55:15,253Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391311417) {}
[INFO ] 2020-03-05T06:55:15,255Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:55:15,272Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391315142) {}
[INFO ] 2020-03-05T06:55:15,274Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:15,294Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391313782) {}
[INFO ] 2020-03-05T06:55:15,296Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:15,308Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391315142) {}
[INFO ] 2020-03-05T06:55:15,312Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:15,327Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391315142) {}
[INFO ] 2020-03-05T06:55:15,328Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:15,329Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391315142) {}
[INFO ] 2020-03-05T06:55:15,330Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-03-05T06:55:15,332Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:55:15,332Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-03-05T06:55:15,336Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:55:15,337Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-03-05T06:55:15,665Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=39a2631a-e7ac-4dd1-882d-05954c7e6b56, invocation_id=89cb5126-1f42-4cd8-9c4c-6e583e00caab, invocation_timestamp=2020-03-05T06:55:15.402Z, origin=Only For Testing, session_id=89cb5126-1f42-4cd8-9c4c-6e583e00caab, session_timestamp=2020-03-05T06:55:15.402Z, thread-id=213}
[WARN ] 2020-03-05T06:55:15,665Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract com.example.contract.IOUContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=39a2631a-e7ac-4dd1-882d-05954c7e6b56, invocation_id=89cb5126-1f42-4cd8-9c4c-6e583e00caab, invocation_timestamp=2020-03-05T06:55:15.402Z, origin=Only For Testing, session_id=89cb5126-1f42-4cd8-9c4c-6e583e00caab, session_timestamp=2020-03-05T06:55:15.402Z, thread-id=213}
[INFO ] 2020-03-05T06:55:18,597Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=cf686b6d-814f-4599-80cb-612b8b540d5a, invocation_id=095b9cc3-1f38-4a20-acfd-fa74fc3dce17, invocation_timestamp=2020-03-05T06:55:18.487Z, origin=O=Mock Company 1, L=London, C=GB, session_id=095b9cc3-1f38-4a20-acfd-fa74fc3dce17, session_timestamp=2020-03-05T06:55:18.487Z, thread-id=213, tx_id=20556AA05B2B946BDC80A85AF297AFC7D0D25EA471B28C8064A565B7E2412106}
[INFO ] 2020-03-05T06:55:18,679Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=cf686b6d-814f-4599-80cb-612b8b540d5a, invocation_id=095b9cc3-1f38-4a20-acfd-fa74fc3dce17, invocation_timestamp=2020-03-05T06:55:18.487Z, origin=O=Mock Company 1, L=London, C=GB, session_id=095b9cc3-1f38-4a20-acfd-fa74fc3dce17, session_timestamp=2020-03-05T06:55:18.487Z, thread-id=213, tx_id=20556AA05B2B946BDC80A85AF297AFC7D0D25EA471B28C8064A565B7E2412106}
[INFO ] 2020-03-05T06:55:18,805Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=39a2631a-e7ac-4dd1-882d-05954c7e6b56, invocation_id=89cb5126-1f42-4cd8-9c4c-6e583e00caab, invocation_timestamp=2020-03-05T06:55:15.402Z, origin=Only For Testing, session_id=89cb5126-1f42-4cd8-9c4c-6e583e00caab, session_timestamp=2020-03-05T06:55:15.402Z, thread-id=213, tx_id=20556AA05B2B946BDC80A85AF297AFC7D0D25EA471B28C8064A565B7E2412106}
[INFO ] 2020-03-05T06:55:18,806Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=39a2631a-e7ac-4dd1-882d-05954c7e6b56, invocation_id=89cb5126-1f42-4cd8-9c4c-6e583e00caab, invocation_timestamp=2020-03-05T06:55:15.402Z, origin=Only For Testing, session_id=89cb5126-1f42-4cd8-9c4c-6e583e00caab, session_timestamp=2020-03-05T06:55:15.402Z, thread-id=213, tx_id=20556AA05B2B946BDC80A85AF297AFC7D0D25EA471B28C8064A565B7E2412106}
[INFO ] 2020-03-05T06:55:18,881Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=39a2631a-e7ac-4dd1-882d-05954c7e6b56, invocation_id=89cb5126-1f42-4cd8-9c4c-6e583e00caab, invocation_timestamp=2020-03-05T06:55:15.402Z, origin=Only For Testing, session_id=89cb5126-1f42-4cd8-9c4c-6e583e00caab, session_timestamp=2020-03-05T06:55:15.402Z, thread-id=213, tx_id=20556AA05B2B946BDC80A85AF297AFC7D0D25EA471B28C8064A565B7E2412106}
[INFO ] 2020-03-05T06:55:18,925Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=cf686b6d-814f-4599-80cb-612b8b540d5a, invocation_id=095b9cc3-1f38-4a20-acfd-fa74fc3dce17, invocation_timestamp=2020-03-05T06:55:18.487Z, origin=O=Mock Company 1, L=London, C=GB, session_id=095b9cc3-1f38-4a20-acfd-fa74fc3dce17, session_timestamp=2020-03-05T06:55:18.487Z, thread-id=213, tx_id=20556AA05B2B946BDC80A85AF297AFC7D0D25EA471B28C8064A565B7E2412106}
[INFO ] 2020-03-05T06:55:18,949Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=cf686b6d-814f-4599-80cb-612b8b540d5a, invocation_id=095b9cc3-1f38-4a20-acfd-fa74fc3dce17, invocation_timestamp=2020-03-05T06:55:18.487Z, origin=O=Mock Company 1, L=London, C=GB, session_id=095b9cc3-1f38-4a20-acfd-fa74fc3dce17, session_timestamp=2020-03-05T06:55:18.487Z, thread-id=213, tx_id=20556AA05B2B946BDC80A85AF297AFC7D0D25EA471B28C8064A565B7E2412106}
[INFO ] 2020-03-05T06:55:18,958Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=cf686b6d-814f-4599-80cb-612b8b540d5a, invocation_id=095b9cc3-1f38-4a20-acfd-fa74fc3dce17, invocation_timestamp=2020-03-05T06:55:18.487Z, origin=O=Mock Company 1, L=London, C=GB, session_id=095b9cc3-1f38-4a20-acfd-fa74fc3dce17, session_timestamp=2020-03-05T06:55:18.487Z, thread-id=213, tx_id=20556AA05B2B946BDC80A85AF297AFC7D0D25EA471B28C8064A565B7E2412106}
[INFO ] 2020-03-05T06:55:18,966Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=cf686b6d-814f-4599-80cb-612b8b540d5a, invocation_id=095b9cc3-1f38-4a20-acfd-fa74fc3dce17, invocation_timestamp=2020-03-05T06:55:18.487Z, origin=O=Mock Company 1, L=London, C=GB, session_id=095b9cc3-1f38-4a20-acfd-fa74fc3dce17, session_timestamp=2020-03-05T06:55:18.487Z, thread-id=213, tx_id=20556AA05B2B946BDC80A85AF297AFC7D0D25EA471B28C8064A565B7E2412106}
[INFO ] 2020-03-05T06:55:18,992Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=39a2631a-e7ac-4dd1-882d-05954c7e6b56, invocation_id=89cb5126-1f42-4cd8-9c4c-6e583e00caab, invocation_timestamp=2020-03-05T06:55:15.402Z, origin=Only For Testing, session_id=89cb5126-1f42-4cd8-9c4c-6e583e00caab, session_timestamp=2020-03-05T06:55:15.402Z, thread-id=213, tx_id=20556AA05B2B946BDC80A85AF297AFC7D0D25EA471B28C8064A565B7E2412106}
[INFO ] 2020-03-05T06:55:18,992Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=39a2631a-e7ac-4dd1-882d-05954c7e6b56, invocation_id=89cb5126-1f42-4cd8-9c4c-6e583e00caab, invocation_timestamp=2020-03-05T06:55:15.402Z, origin=Only For Testing, session_id=89cb5126-1f42-4cd8-9c4c-6e583e00caab, session_timestamp=2020-03-05T06:55:15.402Z, thread-id=213, tx_id=20556AA05B2B946BDC80A85AF297AFC7D0D25EA471B28C8064A565B7E2412106}
[INFO ] 2020-03-05T06:55:19,100Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065519.040/nodes/0/cordapps] {}
[INFO ] 2020-03-05T06:55:19,101Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065519.040/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065519.040/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:55:19,102Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065519.040/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:55:19,107Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065519.040/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:55:19,123Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:55:19,126Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:55:19,130Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:55:19.040Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:55:19,571Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:19,572Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065519.040/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:19,572Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:19,606Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:19,608Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:19,608Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:19,703Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:19,733Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:19,734Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:19,741Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:19,741Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:19,821Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:19,868Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:55:19,875Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:55:19,875Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:55:20,053Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:55:20,058Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:55:20,058Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391320058) {}
[INFO ] 2020-03-05T06:55:20,062Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:55:20,086Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391320058) {}
[INFO ] 2020-03-05T06:55:20,095Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:55:20,111Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391320058) {}
[INFO ] 2020-03-05T06:55:20,123Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:20,146Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F7E15842EC2F0AC3B16038105728F963B12D451F6AE4BC33DEC7F13DD25403E3 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:55:20,149Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-03-05T06:55:20,151Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-03-05T06:55:20,161Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391320058) {}
[INFO ] 2020-03-05T06:55:20,164Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391320058) {}
[INFO ] 2020-03-05T06:55:20,164Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:20,164Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391320058) {}
[INFO ] 2020-03-05T06:55:20,164Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:20,169Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065519.040/nodes/1/cordapps] {}
[INFO ] 2020-03-05T06:55:20,169Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065519.040/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065519.040/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:55:20,169Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065519.040/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:55:20,175Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065519.040/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:55:20,191Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:55:20,215Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:55:20,219Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:55:19.040Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:55:20,680Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:20,682Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065519.040/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:20,682Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:20,694Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:20,696Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:20,696Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:20,803Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:20,814Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:20,815Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:20,818Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:20,818Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:20,910Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:20,915Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:55:20,917Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:20,917Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:21,055Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:21,058Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:55:21,081Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:55:21,081Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391321081) {}
[INFO ] 2020-03-05T06:55:21,084Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:21,093Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391321081) {}
[INFO ] 2020-03-05T06:55:21,100Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:55:21,111Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391321081) {}
[INFO ] 2020-03-05T06:55:21,118Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:21,145Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F7E15842EC2F0AC3B16038105728F963B12D451F6AE4BC33DEC7F13DD25403E3 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:55:21,155Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391321081) {}
[INFO ] 2020-03-05T06:55:21,158Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391320058) {}
[INFO ] 2020-03-05T06:55:21,160Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:55:21,168Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391321081) {}
[INFO ] 2020-03-05T06:55:21,170Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:21,177Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391321081) {}
[INFO ] 2020-03-05T06:55:21,178Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:21,178Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391321081) {}
[INFO ] 2020-03-05T06:55:21,179Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:21,183Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065519.040/nodes/2/cordapps] {}
[INFO ] 2020-03-05T06:55:21,183Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065519.040/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065519.040/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:55:21,188Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065519.040/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:55:21,194Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065519.040/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:55:21,220Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:55:21,244Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:55:21,248Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:55:19.040Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:55:21,752Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:21,753Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065519.040/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:21,753Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:21,767Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:21,770Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:21,770Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:21,893Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:21,904Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:21,905Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:21,906Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:21,906Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:21,970Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:21,975Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:55:21,976Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:21,976Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:22,114Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:22,115Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:55:22,130Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:55:22,131Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391322130) {}
[INFO ] 2020-03-05T06:55:22,132Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:22,138Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391322130) {}
[INFO ] 2020-03-05T06:55:22,142Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:55:22,153Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391322130) {}
[INFO ] 2020-03-05T06:55:22,162Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:22,174Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F7E15842EC2F0AC3B16038105728F963B12D451F6AE4BC33DEC7F13DD25403E3 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:55:22,184Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391322130) {}
[INFO ] 2020-03-05T06:55:22,188Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391320058) {}
[INFO ] 2020-03-05T06:55:22,189Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:55:22,201Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391322130) {}
[INFO ] 2020-03-05T06:55:22,202Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:22,213Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391321081) {}
[INFO ] 2020-03-05T06:55:22,213Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:22,220Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391322130) {}
[INFO ] 2020-03-05T06:55:22,221Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:22,236Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391322130) {}
[INFO ] 2020-03-05T06:55:22,242Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:22,243Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391322130) {}
[INFO ] 2020-03-05T06:55:22,243Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-03-05T06:55:22,246Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:55:22,246Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-03-05T06:55:22,247Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:55:22,247Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[ERROR] 2020-03-05T06:55:24,509Z [Mock network] internal.Verifier. - Error validating transaction F068BB54D3D175828933FA0DAE54E6F8129FD5A444C26A5F92D01ABDA9BBDB49. [errorCode=1dpk8h1, moreInformationAt=https://errors.corda.net/OS/4.3/1dpk8h1] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e807092b-572f-4f24-8649-8e18da312c50, invocation_id=a4f8f3b7-887b-44f3-8d43-d3c01add3027, invocation_timestamp=2020-03-05T06:55:22.248Z, origin=Only For Testing, session_id=a4f8f3b7-887b-44f3-8d43-d3c01add3027, session_timestamp=2020-03-05T06:55:22.248Z, thread-id=290}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at com.example.contract.IOUContract.verify(IOUContract.kt:70) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:551) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:80) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:31) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
[ERROR] 2020-03-05T06:55:24,516Z [Mock network] internal.Verifier. - Error validating transaction F068BB54D3D175828933FA0DAE54E6F8129FD5A444C26A5F92D01ABDA9BBDB49. [errorCode=1dpk8h1, moreInformationAt=https://errors.corda.net/OS/4.3/1dpk8h1] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e807092b-572f-4f24-8649-8e18da312c50, invocation_id=a4f8f3b7-887b-44f3-8d43-d3c01add3027, invocation_timestamp=2020-03-05T06:55:22.248Z, origin=Only For Testing, session_id=a4f8f3b7-887b-44f3-8d43-d3c01add3027, session_timestamp=2020-03-05T06:55:22.248Z, thread-id=290}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at com.example.contract.IOUContract.verify(IOUContract.kt:70) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:80) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:31) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
[INFO ] 2020-03-05T06:55:24,519Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: F068BB54D3D175828933FA0DAE54E6F8129FD5A444C26A5F92D01ABDA9BBDB49. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e807092b-572f-4f24-8649-8e18da312c50, invocation_id=a4f8f3b7-887b-44f3-8d43-d3c01add3027, invocation_timestamp=2020-03-05T06:55:22.248Z, origin=Only For Testing, session_id=a4f8f3b7-887b-44f3-8d43-d3c01add3027, session_timestamp=2020-03-05T06:55:22.248Z, thread-id=290}
[INFO ] 2020-03-05T06:55:24,523Z [Mock network] statemachine.StaffedFlowHospital. - Flow [e807092b-572f-4f24-8649-8e18da312c50] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a4f8f3b7-887b-44f3-8d43-d3c01add3027, timestamp: 2020-03-05T06:55:22.248Z, entityType: Invocation, sessionId=a4f8f3b7-887b-44f3-8d43-d3c01add3027, timestamp: 2020-03-05T06:55:22.248Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=5, corDappName=cordapp-example-workflows-0.1, corDappHash=22148056ED8A556716712ADBBA7A899A3F563E800C79275C62BD5697EA0ABE9C), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C5E6717A35C074258542A043D8E48694B0DF8183CFB86A4E5A651E9F4D842C82), errorState=Clean, numberOfSuspends=0), flowLogic=com.example.flow.ExampleFlow$Initiator@210aec3f, pendingDeduplicationHandlers=[], isFlowResumed=true, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=679aaadd-a17f-4fac-9751-be5da7e441a8) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e807092b-572f-4f24-8649-8e18da312c50, invocation_id=a4f8f3b7-887b-44f3-8d43-d3c01add3027, invocation_timestamp=2020-03-05T06:55:22.248Z, origin=Only For Testing, session_id=a4f8f3b7-887b-44f3-8d43-d3c01add3027, session_timestamp=2020-03-05T06:55:22.248Z, thread-id=290}
[INFO ] 2020-03-05T06:55:24,527Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e807092b-572f-4f24-8649-8e18da312c50, invocation_id=a4f8f3b7-887b-44f3-8d43-d3c01add3027, invocation_timestamp=2020-03-05T06:55:22.248Z, origin=Only For Testing, session_id=a4f8f3b7-887b-44f3-8d43-d3c01add3027, session_timestamp=2020-03-05T06:55:22.248Z, thread-id=290}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: F068BB54D3D175828933FA0DAE54E6F8129FD5A444C26A5F92D01ABDA9BBDB49
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:403) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:80) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:31) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at com.example.contract.IOUContract.verify(IOUContract.kt:70) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	... 18 more
[INFO ] 2020-03-05T06:55:24,532Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e807092b-572f-4f24-8649-8e18da312c50, invocation_id=a4f8f3b7-887b-44f3-8d43-d3c01add3027, invocation_timestamp=2020-03-05T06:55:22.248Z, origin=Only For Testing, session_id=a4f8f3b7-887b-44f3-8d43-d3c01add3027, session_timestamp=2020-03-05T06:55:22.248Z, thread-id=290}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: F068BB54D3D175828933FA0DAE54E6F8129FD5A444C26A5F92D01ABDA9BBDB49
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:403) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:80) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:31) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at com.example.contract.IOUContract.verify(IOUContract.kt:70) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	... 18 more
[WARN ] 2020-03-05T06:55:24,547Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [e807092b-572f-4f24-8649-8e18da312c50] errored, dumping all transitions:

 --- Transition of flow [e807092b-572f-4f24-8649-8e18da312c50] ---
  Timestamp: 2020-03-05T06:55:22.251Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[e807092b-572f-4f24-8649-8e18da312c50], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a4f8f3b7-887b-44f3-8d43-d3c01add3027, timestamp: 2020-03-05T06:55:22.248Z, entityType: Invocation, sessionId=a4f8f3b7-887b-44f3-8d43-d3c01add3027, timestamp: 2020-03-05T06:55:22.248Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=5, corDappName=cordapp-example-workflows-0.1, corDappHash=22148056ED8A556716712ADBBA7A899A3F563E800C79275C62BD5697EA0ABE9C), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C5E6717A35C074258542A043D8E48694B0DF8183CFB86A4E5A651E9F4D842C82), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@524cbd7])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@524cbd7])
    SignalFlowHasStarted(flowId=[e807092b-572f-4f24-8649-8e18da312c50])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@524cbd7]
    []


 --- Transition of flow [e807092b-572f-4f24-8649-8e18da312c50] ---
  Timestamp: 2020-03-05T06:55:24.534Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: F068BB54D3D175828933FA0DAE54E6F8129FD5A444C26A5F92D01ABDA9BBDB49)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-6209136462392972093, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: F068BB54D3D175828933FA0DAE54E6F8129FD5A444C26A5F92D01ABDA9BBDB49)], propagatedIndex=0, propagating=false)


 --- Transition of flow [e807092b-572f-4f24-8649-8e18da312c50] ---
  Timestamp: 2020-03-05T06:55:24.538Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [e807092b-572f-4f24-8649-8e18da312c50] ---
  Timestamp: 2020-03-05T06:55:24.539Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e807092b-572f-4f24-8649-8e18da312c50, invocation_id=a4f8f3b7-887b-44f3-8d43-d3c01add3027, invocation_timestamp=2020-03-05T06:55:22.248Z, origin=Only For Testing, session_id=a4f8f3b7-887b-44f3-8d43-d3c01add3027, session_timestamp=2020-03-05T06:55:22.248Z, thread-id=290}
[WARN ] 2020-03-05T06:55:24,548Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [e807092b-572f-4f24-8649-8e18da312c50] error [errorCode=w80ewk, moreInformationAt=https://errors.corda.net/OS/4.3/w80ewk] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e807092b-572f-4f24-8649-8e18da312c50, invocation_id=a4f8f3b7-887b-44f3-8d43-d3c01add3027, invocation_timestamp=2020-03-05T06:55:22.248Z, origin=Only For Testing, session_id=a4f8f3b7-887b-44f3-8d43-d3c01add3027, session_timestamp=2020-03-05T06:55:22.248Z, thread-id=290}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: F068BB54D3D175828933FA0DAE54E6F8129FD5A444C26A5F92D01ABDA9BBDB49
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:403) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:80) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:31) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at com.example.contract.IOUContract.verify(IOUContract.kt:70) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	... 18 more
[WARN ] 2020-03-05T06:55:24,552Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error [errorCode=w80ewk, moreInformationAt=https://errors.corda.net/OS/4.3/w80ewk] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e807092b-572f-4f24-8649-8e18da312c50, invocation_id=a4f8f3b7-887b-44f3-8d43-d3c01add3027, invocation_timestamp=2020-03-05T06:55:22.248Z, origin=Only For Testing, session_id=a4f8f3b7-887b-44f3-8d43-d3c01add3027, session_timestamp=2020-03-05T06:55:22.248Z, thread-id=290}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: F068BB54D3D175828933FA0DAE54E6F8129FD5A444C26A5F92D01ABDA9BBDB49
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:403) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:80) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:31) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at com.example.contract.IOUContract.verify(IOUContract.kt:70) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	... 18 more
[WARN ] 2020-03-05T06:55:24,578Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [e807092b-572f-4f24-8649-8e18da312c50] errored, dumping all transitions:

 --- Transition of flow [e807092b-572f-4f24-8649-8e18da312c50] ---
  Timestamp: 2020-03-05T06:55:22.251Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[e807092b-572f-4f24-8649-8e18da312c50], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a4f8f3b7-887b-44f3-8d43-d3c01add3027, timestamp: 2020-03-05T06:55:22.248Z, entityType: Invocation, sessionId=a4f8f3b7-887b-44f3-8d43-d3c01add3027, timestamp: 2020-03-05T06:55:22.248Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=5, corDappName=cordapp-example-workflows-0.1, corDappHash=22148056ED8A556716712ADBBA7A899A3F563E800C79275C62BD5697EA0ABE9C), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C5E6717A35C074258542A043D8E48694B0DF8183CFB86A4E5A651E9F4D842C82), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@524cbd7])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@524cbd7])
    SignalFlowHasStarted(flowId=[e807092b-572f-4f24-8649-8e18da312c50])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@524cbd7]
    []


 --- Transition of flow [e807092b-572f-4f24-8649-8e18da312c50] ---
  Timestamp: 2020-03-05T06:55:24.534Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: F068BB54D3D175828933FA0DAE54E6F8129FD5A444C26A5F92D01ABDA9BBDB49)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-6209136462392972093, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: F068BB54D3D175828933FA0DAE54E6F8129FD5A444C26A5F92D01ABDA9BBDB49)], propagatedIndex=0, propagating=false)


 --- Transition of flow [e807092b-572f-4f24-8649-8e18da312c50] ---
  Timestamp: 2020-03-05T06:55:24.538Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [e807092b-572f-4f24-8649-8e18da312c50] ---
  Timestamp: 2020-03-05T06:55:24.539Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [e807092b-572f-4f24-8649-8e18da312c50] ---
  Timestamp: 2020-03-05T06:55:24.574Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: F068BB54D3D175828933FA0DAE54E6F8129FD5A444C26A5F92D01ABDA9BBDB49, errorId=-6209136462392972093)], sessions=[], senderUUID=679aaadd-a17f-4fac-9751-be5da7e441a8)
    CreateTransaction
    RemoveCheckpoint(id=[e807092b-572f-4f24-8649-8e18da312c50])
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=e807092b-572f-4f24-8649-8e18da312c50)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[e807092b-572f-4f24-8649-8e18da312c50], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-6209136462392972093, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: F068BB54D3D175828933FA0DAE54E6F8129FD5A444C26A5F92D01ABDA9BBDB49)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a4f8f3b7-887b-44f3-8d43-d3c01add3027, timestamp: 2020-03-05T06:55:22.248Z, entityType: Invocation, sessionId=a4f8f3b7-887b-44f3-8d43-d3c01add3027, timestamp: 2020-03-05T06:55:22.248Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=5, corDappName=cordapp-example-workflows-0.1, corDappHash=22148056ED8A556716712ADBBA7A899A3F563E800C79275C62BD5697EA0ABE9C), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C5E6717A35C074258542A043D8E48694B0DF8183CFB86A4E5A651E9F4D842C82), errorState=Errored(errors=[FlowError(errorId=-6209136462392972093, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: F068BB54D3D175828933FA0DAE54E6F8129FD5A444C26A5F92D01ABDA9BBDB49)], propagatedIndex=1, propagating=true), numberOfSuspends=0), flowLogic=com.example.flow.ExampleFlow$Initiator@210aec3f, pendingDeduplicationHandlers=[], isFlowResumed=false, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=679aaadd-a17f-4fac-9751-be5da7e441a8))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.errorState.propagatedIndex: 
    0
    1
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e807092b-572f-4f24-8649-8e18da312c50, invocation_id=a4f8f3b7-887b-44f3-8d43-d3c01add3027, invocation_timestamp=2020-03-05T06:55:22.248Z, origin=Only For Testing, session_id=a4f8f3b7-887b-44f3-8d43-d3c01add3027, session_timestamp=2020-03-05T06:55:22.248Z, thread-id=290}
[WARN ] 2020-03-05T06:55:24,578Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [e807092b-572f-4f24-8649-8e18da312c50] error [errorCode=w80ewk, moreInformationAt=https://errors.corda.net/OS/4.3/w80ewk] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e807092b-572f-4f24-8649-8e18da312c50, invocation_id=a4f8f3b7-887b-44f3-8d43-d3c01add3027, invocation_timestamp=2020-03-05T06:55:22.248Z, origin=Only For Testing, session_id=a4f8f3b7-887b-44f3-8d43-d3c01add3027, session_timestamp=2020-03-05T06:55:22.248Z, thread-id=290}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: F068BB54D3D175828933FA0DAE54E6F8129FD5A444C26A5F92D01ABDA9BBDB49
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:403) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:80) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.kt:31) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at com.example.contract.IOUContract.verify(IOUContract.kt:70) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	... 18 more
[INFO ] 2020-03-05T06:55:24,693Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065524.634/nodes/0/cordapps] {}
[INFO ] 2020-03-05T06:55:24,693Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065524.634/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065524.634/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:55:24,694Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065524.634/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:55:24,709Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065524.634/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:55:24,750Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:55:24,753Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:55:24,758Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:55:24.634Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:55:25,197Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:25,199Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065524.634/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:25,199Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:25,205Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:25,207Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:25,207Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:25,312Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:25,325Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:25,326Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:25,328Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:25,328Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:25,365Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:25,379Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:55:25,393Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:55:25,394Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:55:25,547Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:55:25,555Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:55:25,555Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391325555) {}
[INFO ] 2020-03-05T06:55:25,559Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:55:25,578Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391325555) {}
[INFO ] 2020-03-05T06:55:25,594Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:55:25,606Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391325555) {}
[INFO ] 2020-03-05T06:55:25,616Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:25,635Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F7E15842EC2F0AC3B16038105728F963B12D451F6AE4BC33DEC7F13DD25403E3 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:55:25,637Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-03-05T06:55:25,638Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-03-05T06:55:25,643Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391325555) {}
[INFO ] 2020-03-05T06:55:25,645Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391325555) {}
[INFO ] 2020-03-05T06:55:25,645Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:25,645Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391325555) {}
[INFO ] 2020-03-05T06:55:25,645Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:25,650Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065524.634/nodes/1/cordapps] {}
[INFO ] 2020-03-05T06:55:25,651Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065524.634/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065524.634/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:55:25,663Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065524.634/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:55:25,673Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065524.634/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:55:25,700Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:55:25,721Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:55:25,725Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:55:24.634Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:55:26,210Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:26,211Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065524.634/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:26,211Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:26,225Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:26,226Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:26,226Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:26,352Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:26,368Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:26,369Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:26,370Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:26,371Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:26,408Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:26,424Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:55:26,425Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:26,425Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:26,507Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:26,508Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:55:26,521Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:55:26,521Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391326521) {}
[INFO ] 2020-03-05T06:55:26,522Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:26,527Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391326521) {}
[INFO ] 2020-03-05T06:55:26,530Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:55:26,540Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391326521) {}
[INFO ] 2020-03-05T06:55:26,546Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:26,560Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F7E15842EC2F0AC3B16038105728F963B12D451F6AE4BC33DEC7F13DD25403E3 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:55:26,565Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391326521) {}
[INFO ] 2020-03-05T06:55:26,567Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391325555) {}
[INFO ] 2020-03-05T06:55:26,568Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:55:26,574Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391326521) {}
[INFO ] 2020-03-05T06:55:26,575Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:26,581Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391326521) {}
[INFO ] 2020-03-05T06:55:26,581Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:26,581Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391326521) {}
[INFO ] 2020-03-05T06:55:26,581Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:26,584Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065524.634/nodes/2/cordapps] {}
[INFO ] 2020-03-05T06:55:26,584Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065524.634/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065524.634/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:55:26,584Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065524.634/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:55:26,594Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065524.634/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:55:26,608Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:55:26,627Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:55:26,632Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:55:24.634Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:55:27,025Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:27,031Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065524.634/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:27,031Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:27,042Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:27,043Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:27,043Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:27,158Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:27,171Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:27,171Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:27,176Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:27,176Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:27,228Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:27,256Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:55:27,257Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:27,257Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:27,334Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:27,335Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:55:27,348Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:55:27,348Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391327348) {}
[INFO ] 2020-03-05T06:55:27,350Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:27,354Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391327348) {}
[INFO ] 2020-03-05T06:55:27,358Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:55:27,374Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391327348) {}
[INFO ] 2020-03-05T06:55:27,379Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:27,391Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F7E15842EC2F0AC3B16038105728F963B12D451F6AE4BC33DEC7F13DD25403E3 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:55:27,396Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391327348) {}
[INFO ] 2020-03-05T06:55:27,398Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391325555) {}
[INFO ] 2020-03-05T06:55:27,399Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:55:27,406Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391327348) {}
[INFO ] 2020-03-05T06:55:27,407Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:27,420Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391326521) {}
[INFO ] 2020-03-05T06:55:27,423Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:27,429Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391327348) {}
[INFO ] 2020-03-05T06:55:27,433Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:27,441Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391327348) {}
[INFO ] 2020-03-05T06:55:27,441Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:27,441Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391327348) {}
[INFO ] 2020-03-05T06:55:27,441Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-03-05T06:55:27,442Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:55:27,442Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-03-05T06:55:27,442Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:55:27,442Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:55:29,751Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=57665d3b-3eef-419f-bada-0dcbbf68c078, invocation_id=9563fcf7-3ea8-4463-8cc1-d443f4fa0d41, invocation_timestamp=2020-03-05T06:55:29.726Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9563fcf7-3ea8-4463-8cc1-d443f4fa0d41, session_timestamp=2020-03-05T06:55:29.726Z, thread-id=364, tx_id=CD09F8FB364B674761FE88A363A8C0FE9A4B61AF4F1F18DC0B9FF38BC469C333}
[INFO ] 2020-03-05T06:55:29,763Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=57665d3b-3eef-419f-bada-0dcbbf68c078, invocation_id=9563fcf7-3ea8-4463-8cc1-d443f4fa0d41, invocation_timestamp=2020-03-05T06:55:29.726Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9563fcf7-3ea8-4463-8cc1-d443f4fa0d41, session_timestamp=2020-03-05T06:55:29.726Z, thread-id=364, tx_id=CD09F8FB364B674761FE88A363A8C0FE9A4B61AF4F1F18DC0B9FF38BC469C333}
[INFO ] 2020-03-05T06:55:29,867Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=b0ce06a8-56ba-40e1-8e76-f3de00f4a4c4, invocation_id=7af267c9-bbf2-4735-98b3-d5d89d9e5666, invocation_timestamp=2020-03-05T06:55:27.443Z, origin=Only For Testing, session_id=7af267c9-bbf2-4735-98b3-d5d89d9e5666, session_timestamp=2020-03-05T06:55:27.443Z, thread-id=364, tx_id=CD09F8FB364B674761FE88A363A8C0FE9A4B61AF4F1F18DC0B9FF38BC469C333}
[INFO ] 2020-03-05T06:55:29,868Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=b0ce06a8-56ba-40e1-8e76-f3de00f4a4c4, invocation_id=7af267c9-bbf2-4735-98b3-d5d89d9e5666, invocation_timestamp=2020-03-05T06:55:27.443Z, origin=Only For Testing, session_id=7af267c9-bbf2-4735-98b3-d5d89d9e5666, session_timestamp=2020-03-05T06:55:27.443Z, thread-id=364, tx_id=CD09F8FB364B674761FE88A363A8C0FE9A4B61AF4F1F18DC0B9FF38BC469C333}
[INFO ] 2020-03-05T06:55:29,891Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=b0ce06a8-56ba-40e1-8e76-f3de00f4a4c4, invocation_id=7af267c9-bbf2-4735-98b3-d5d89d9e5666, invocation_timestamp=2020-03-05T06:55:27.443Z, origin=Only For Testing, session_id=7af267c9-bbf2-4735-98b3-d5d89d9e5666, session_timestamp=2020-03-05T06:55:27.443Z, thread-id=364, tx_id=CD09F8FB364B674761FE88A363A8C0FE9A4B61AF4F1F18DC0B9FF38BC469C333}
[INFO ] 2020-03-05T06:55:29,913Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=57665d3b-3eef-419f-bada-0dcbbf68c078, invocation_id=9563fcf7-3ea8-4463-8cc1-d443f4fa0d41, invocation_timestamp=2020-03-05T06:55:29.726Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9563fcf7-3ea8-4463-8cc1-d443f4fa0d41, session_timestamp=2020-03-05T06:55:29.726Z, thread-id=364, tx_id=CD09F8FB364B674761FE88A363A8C0FE9A4B61AF4F1F18DC0B9FF38BC469C333}
[INFO ] 2020-03-05T06:55:29,930Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=57665d3b-3eef-419f-bada-0dcbbf68c078, invocation_id=9563fcf7-3ea8-4463-8cc1-d443f4fa0d41, invocation_timestamp=2020-03-05T06:55:29.726Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9563fcf7-3ea8-4463-8cc1-d443f4fa0d41, session_timestamp=2020-03-05T06:55:29.726Z, thread-id=364, tx_id=CD09F8FB364B674761FE88A363A8C0FE9A4B61AF4F1F18DC0B9FF38BC469C333}
[INFO ] 2020-03-05T06:55:29,936Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=57665d3b-3eef-419f-bada-0dcbbf68c078, invocation_id=9563fcf7-3ea8-4463-8cc1-d443f4fa0d41, invocation_timestamp=2020-03-05T06:55:29.726Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9563fcf7-3ea8-4463-8cc1-d443f4fa0d41, session_timestamp=2020-03-05T06:55:29.726Z, thread-id=364, tx_id=CD09F8FB364B674761FE88A363A8C0FE9A4B61AF4F1F18DC0B9FF38BC469C333}
[INFO ] 2020-03-05T06:55:29,948Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=57665d3b-3eef-419f-bada-0dcbbf68c078, invocation_id=9563fcf7-3ea8-4463-8cc1-d443f4fa0d41, invocation_timestamp=2020-03-05T06:55:29.726Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9563fcf7-3ea8-4463-8cc1-d443f4fa0d41, session_timestamp=2020-03-05T06:55:29.726Z, thread-id=364, tx_id=CD09F8FB364B674761FE88A363A8C0FE9A4B61AF4F1F18DC0B9FF38BC469C333}
[INFO ] 2020-03-05T06:55:29,963Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=b0ce06a8-56ba-40e1-8e76-f3de00f4a4c4, invocation_id=7af267c9-bbf2-4735-98b3-d5d89d9e5666, invocation_timestamp=2020-03-05T06:55:27.443Z, origin=Only For Testing, session_id=7af267c9-bbf2-4735-98b3-d5d89d9e5666, session_timestamp=2020-03-05T06:55:27.443Z, thread-id=364, tx_id=CD09F8FB364B674761FE88A363A8C0FE9A4B61AF4F1F18DC0B9FF38BC469C333}
[INFO ] 2020-03-05T06:55:29,964Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=b0ce06a8-56ba-40e1-8e76-f3de00f4a4c4, invocation_id=7af267c9-bbf2-4735-98b3-d5d89d9e5666, invocation_timestamp=2020-03-05T06:55:27.443Z, origin=Only For Testing, session_id=7af267c9-bbf2-4735-98b3-d5d89d9e5666, session_timestamp=2020-03-05T06:55:27.443Z, thread-id=364, tx_id=CD09F8FB364B674761FE88A363A8C0FE9A4B61AF4F1F18DC0B9FF38BC469C333}
[INFO ] 2020-03-05T06:55:30,081Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065530.033/nodes/0/cordapps] {}
[INFO ] 2020-03-05T06:55:30,082Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065530.033/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065530.033/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:55:30,083Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065530.033/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:55:30,087Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065530.033/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:55:30,111Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:55:30,114Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:55:30,118Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:55:30.033Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:55:30,568Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:30,572Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065530.033/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:30,572Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:30,585Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:30,587Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:30,587Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:30,688Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:30,706Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:30,707Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:30,712Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:30,712Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:30,770Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:30,788Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:55:30,794Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:55:30,794Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:55:30,914Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:55:30,919Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:55:30,919Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391330919) {}
[INFO ] 2020-03-05T06:55:30,925Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:55:30,944Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391330919) {}
[INFO ] 2020-03-05T06:55:30,961Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:55:30,975Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391330919) {}
[INFO ] 2020-03-05T06:55:30,979Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:31,004Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F7E15842EC2F0AC3B16038105728F963B12D451F6AE4BC33DEC7F13DD25403E3 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:55:31,006Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-03-05T06:55:31,007Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-03-05T06:55:31,016Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391330919) {}
[INFO ] 2020-03-05T06:55:31,018Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391330919) {}
[INFO ] 2020-03-05T06:55:31,018Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:31,018Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391330919) {}
[INFO ] 2020-03-05T06:55:31,018Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:31,021Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065530.033/nodes/1/cordapps] {}
[INFO ] 2020-03-05T06:55:31,021Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065530.033/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065530.033/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:55:31,021Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065530.033/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:55:31,030Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065530.033/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:55:31,052Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:55:31,067Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:55:31,069Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:55:30.033Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:55:31,396Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:31,397Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065530.033/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:31,397Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:31,404Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:31,405Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:31,405Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:31,518Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:31,530Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:31,534Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:31,537Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:31,537Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:31,629Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:31,634Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:55:31,636Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:31,636Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:31,745Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:31,747Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:55:31,760Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:55:31,761Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391331761) {}
[INFO ] 2020-03-05T06:55:31,763Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:31,768Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391331761) {}
[INFO ] 2020-03-05T06:55:31,772Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:55:31,788Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391331761) {}
[INFO ] 2020-03-05T06:55:31,796Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:31,807Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F7E15842EC2F0AC3B16038105728F963B12D451F6AE4BC33DEC7F13DD25403E3 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:55:31,812Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391331761) {}
[INFO ] 2020-03-05T06:55:31,814Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391330919) {}
[INFO ] 2020-03-05T06:55:31,814Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:55:31,820Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391331761) {}
[INFO ] 2020-03-05T06:55:31,822Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:31,827Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391331761) {}
[INFO ] 2020-03-05T06:55:31,828Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:31,828Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391331761) {}
[INFO ] 2020-03-05T06:55:31,828Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:31,830Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065530.033/nodes/2/cordapps] {}
[INFO ] 2020-03-05T06:55:31,831Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065530.033/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065530.033/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:55:31,831Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065530.033/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:55:31,834Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065530.033/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:55:31,855Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:55:31,879Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:55:31,880Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:55:30.033Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:55:32,242Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:32,244Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065530.033/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:32,244Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:32,251Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:32,252Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:32,253Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:32,306Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:32,312Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:32,313Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:32,314Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:32,314Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:32,379Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:32,383Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:55:32,388Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:32,389Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:32,470Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:32,471Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:55:32,486Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:55:32,486Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391332486) {}
[INFO ] 2020-03-05T06:55:32,487Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:32,492Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391332486) {}
[INFO ] 2020-03-05T06:55:32,520Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:55:32,540Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391332486) {}
[INFO ] 2020-03-05T06:55:32,544Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:32,559Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F7E15842EC2F0AC3B16038105728F963B12D451F6AE4BC33DEC7F13DD25403E3 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:55:32,564Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391332486) {}
[INFO ] 2020-03-05T06:55:32,566Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391330919) {}
[INFO ] 2020-03-05T06:55:32,566Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:55:32,574Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391332486) {}
[INFO ] 2020-03-05T06:55:32,575Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:32,581Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391331761) {}
[INFO ] 2020-03-05T06:55:32,582Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:32,588Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391332486) {}
[INFO ] 2020-03-05T06:55:32,589Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:32,597Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391332486) {}
[INFO ] 2020-03-05T06:55:32,597Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:32,597Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391332486) {}
[INFO ] 2020-03-05T06:55:32,597Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-03-05T06:55:32,597Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:55:32,597Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-03-05T06:55:32,597Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:55:32,597Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:55:34,942Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=1cd64648-8c2a-4210-a1d8-586df70d9501, invocation_id=4a38a8e0-0043-4ae7-bc4c-d6290e1b5095, invocation_timestamp=2020-03-05T06:55:34.912Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4a38a8e0-0043-4ae7-bc4c-d6290e1b5095, session_timestamp=2020-03-05T06:55:34.912Z, thread-id=438, tx_id=8D96399A5B3F806701F19E66F146D50756A67A513BD096F9B9246610608D8F64}
[INFO ] 2020-03-05T06:55:34,959Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=1cd64648-8c2a-4210-a1d8-586df70d9501, invocation_id=4a38a8e0-0043-4ae7-bc4c-d6290e1b5095, invocation_timestamp=2020-03-05T06:55:34.912Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4a38a8e0-0043-4ae7-bc4c-d6290e1b5095, session_timestamp=2020-03-05T06:55:34.912Z, thread-id=438, tx_id=8D96399A5B3F806701F19E66F146D50756A67A513BD096F9B9246610608D8F64}
[INFO ] 2020-03-05T06:55:35,073Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=6811f9f9-0f44-4cca-8e32-2cbd31f83a06, invocation_id=a4d7cf8b-f855-4f39-9af5-40fee1149f11, invocation_timestamp=2020-03-05T06:55:32.598Z, origin=Only For Testing, session_id=a4d7cf8b-f855-4f39-9af5-40fee1149f11, session_timestamp=2020-03-05T06:55:32.598Z, thread-id=438, tx_id=8D96399A5B3F806701F19E66F146D50756A67A513BD096F9B9246610608D8F64}
[INFO ] 2020-03-05T06:55:35,074Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=6811f9f9-0f44-4cca-8e32-2cbd31f83a06, invocation_id=a4d7cf8b-f855-4f39-9af5-40fee1149f11, invocation_timestamp=2020-03-05T06:55:32.598Z, origin=Only For Testing, session_id=a4d7cf8b-f855-4f39-9af5-40fee1149f11, session_timestamp=2020-03-05T06:55:32.598Z, thread-id=438, tx_id=8D96399A5B3F806701F19E66F146D50756A67A513BD096F9B9246610608D8F64}
[INFO ] 2020-03-05T06:55:35,089Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=6811f9f9-0f44-4cca-8e32-2cbd31f83a06, invocation_id=a4d7cf8b-f855-4f39-9af5-40fee1149f11, invocation_timestamp=2020-03-05T06:55:32.598Z, origin=Only For Testing, session_id=a4d7cf8b-f855-4f39-9af5-40fee1149f11, session_timestamp=2020-03-05T06:55:32.598Z, thread-id=438, tx_id=8D96399A5B3F806701F19E66F146D50756A67A513BD096F9B9246610608D8F64}
[INFO ] 2020-03-05T06:55:35,106Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=1cd64648-8c2a-4210-a1d8-586df70d9501, invocation_id=4a38a8e0-0043-4ae7-bc4c-d6290e1b5095, invocation_timestamp=2020-03-05T06:55:34.912Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4a38a8e0-0043-4ae7-bc4c-d6290e1b5095, session_timestamp=2020-03-05T06:55:34.912Z, thread-id=438, tx_id=8D96399A5B3F806701F19E66F146D50756A67A513BD096F9B9246610608D8F64}
[INFO ] 2020-03-05T06:55:35,116Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=1cd64648-8c2a-4210-a1d8-586df70d9501, invocation_id=4a38a8e0-0043-4ae7-bc4c-d6290e1b5095, invocation_timestamp=2020-03-05T06:55:34.912Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4a38a8e0-0043-4ae7-bc4c-d6290e1b5095, session_timestamp=2020-03-05T06:55:34.912Z, thread-id=438, tx_id=8D96399A5B3F806701F19E66F146D50756A67A513BD096F9B9246610608D8F64}
[INFO ] 2020-03-05T06:55:35,121Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=1cd64648-8c2a-4210-a1d8-586df70d9501, invocation_id=4a38a8e0-0043-4ae7-bc4c-d6290e1b5095, invocation_timestamp=2020-03-05T06:55:34.912Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4a38a8e0-0043-4ae7-bc4c-d6290e1b5095, session_timestamp=2020-03-05T06:55:34.912Z, thread-id=438, tx_id=8D96399A5B3F806701F19E66F146D50756A67A513BD096F9B9246610608D8F64}
[INFO ] 2020-03-05T06:55:35,127Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=1cd64648-8c2a-4210-a1d8-586df70d9501, invocation_id=4a38a8e0-0043-4ae7-bc4c-d6290e1b5095, invocation_timestamp=2020-03-05T06:55:34.912Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4a38a8e0-0043-4ae7-bc4c-d6290e1b5095, session_timestamp=2020-03-05T06:55:34.912Z, thread-id=438, tx_id=8D96399A5B3F806701F19E66F146D50756A67A513BD096F9B9246610608D8F64}
[INFO ] 2020-03-05T06:55:35,137Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=6811f9f9-0f44-4cca-8e32-2cbd31f83a06, invocation_id=a4d7cf8b-f855-4f39-9af5-40fee1149f11, invocation_timestamp=2020-03-05T06:55:32.598Z, origin=Only For Testing, session_id=a4d7cf8b-f855-4f39-9af5-40fee1149f11, session_timestamp=2020-03-05T06:55:32.598Z, thread-id=438, tx_id=8D96399A5B3F806701F19E66F146D50756A67A513BD096F9B9246610608D8F64}
[INFO ] 2020-03-05T06:55:35,138Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=6811f9f9-0f44-4cca-8e32-2cbd31f83a06, invocation_id=a4d7cf8b-f855-4f39-9af5-40fee1149f11, invocation_timestamp=2020-03-05T06:55:32.598Z, origin=Only For Testing, session_id=a4d7cf8b-f855-4f39-9af5-40fee1149f11, session_timestamp=2020-03-05T06:55:32.598Z, thread-id=438, tx_id=8D96399A5B3F806701F19E66F146D50756A67A513BD096F9B9246610608D8F64}
[INFO ] 2020-03-05T06:55:35,235Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065535.165/nodes/0/cordapps] {}
[INFO ] 2020-03-05T06:55:35,237Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065535.165/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065535.165/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:55:35,238Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065535.165/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:55:35,242Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065535.165/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:55:35,265Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:55:35,269Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:55:35,273Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:55:35.165Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:55:35,649Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:35,650Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065535.165/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:35,650Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:35,668Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:35,669Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:35,669Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:35,750Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:35,757Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:35,758Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:35,759Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:35,759Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:35,796Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:35,811Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:55:35,819Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:55:35,819Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:55:35,959Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:55:35,964Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:55:35,965Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391335965) {}
[INFO ] 2020-03-05T06:55:35,966Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:55:35,975Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391335965) {}
[INFO ] 2020-03-05T06:55:35,981Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:55:36,000Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391335965) {}
[INFO ] 2020-03-05T06:55:36,007Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:36,020Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F7E15842EC2F0AC3B16038105728F963B12D451F6AE4BC33DEC7F13DD25403E3 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:55:36,021Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-03-05T06:55:36,021Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-03-05T06:55:36,025Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391335965) {}
[INFO ] 2020-03-05T06:55:36,027Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391335965) {}
[INFO ] 2020-03-05T06:55:36,027Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:36,027Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391335965) {}
[INFO ] 2020-03-05T06:55:36,027Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:36,030Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065535.165/nodes/1/cordapps] {}
[INFO ] 2020-03-05T06:55:36,030Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065535.165/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065535.165/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:55:36,030Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065535.165/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:55:36,036Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065535.165/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:55:36,056Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:55:36,079Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:55:36,081Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:55:35.165Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:55:36,460Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:36,470Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065535.165/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:36,470Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:36,496Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:36,499Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:36,499Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:36,565Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:36,571Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:36,572Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:36,573Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:36,573Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:36,605Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:36,609Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:55:36,610Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:36,610Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:36,674Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:36,675Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:55:36,690Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:55:36,690Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391336690) {}
[INFO ] 2020-03-05T06:55:36,691Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:36,695Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391336690) {}
[INFO ] 2020-03-05T06:55:36,699Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:55:36,708Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391336690) {}
[INFO ] 2020-03-05T06:55:36,730Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:36,748Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F7E15842EC2F0AC3B16038105728F963B12D451F6AE4BC33DEC7F13DD25403E3 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:55:36,753Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391336690) {}
[INFO ] 2020-03-05T06:55:36,755Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391335965) {}
[INFO ] 2020-03-05T06:55:36,756Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:55:36,762Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391336690) {}
[INFO ] 2020-03-05T06:55:36,764Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:36,772Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391336690) {}
[INFO ] 2020-03-05T06:55:36,772Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:36,772Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391336690) {}
[INFO ] 2020-03-05T06:55:36,772Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:36,777Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065535.165/nodes/2/cordapps] {}
[INFO ] 2020-03-05T06:55:36,777Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065535.165/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065535.165/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:55:36,778Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065535.165/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:55:36,786Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065535.165/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:55:36,805Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:55:36,823Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:55:36,825Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:55:35.165Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:55:37,125Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:37,126Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065535.165/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:37,126Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:37,144Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:37,145Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:37,145Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:37,264Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:37,269Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:37,269Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:37,271Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:37,271Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:37,319Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:37,322Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:55:37,323Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:37,323Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:37,415Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:37,416Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:55:37,429Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:55:37,430Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391337429) {}
[INFO ] 2020-03-05T06:55:37,431Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:37,435Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391337429) {}
[INFO ] 2020-03-05T06:55:37,439Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:55:37,449Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391337429) {}
[INFO ] 2020-03-05T06:55:37,453Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:37,473Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F7E15842EC2F0AC3B16038105728F963B12D451F6AE4BC33DEC7F13DD25403E3 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:55:37,484Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391337429) {}
[INFO ] 2020-03-05T06:55:37,486Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391335965) {}
[INFO ] 2020-03-05T06:55:37,491Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:55:37,498Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391337429) {}
[INFO ] 2020-03-05T06:55:37,501Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:37,509Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391336690) {}
[INFO ] 2020-03-05T06:55:37,510Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:37,514Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391337429) {}
[INFO ] 2020-03-05T06:55:37,515Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:37,519Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391337429) {}
[INFO ] 2020-03-05T06:55:37,519Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:37,520Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391337429) {}
[INFO ] 2020-03-05T06:55:37,520Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-03-05T06:55:37,520Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:55:37,520Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-03-05T06:55:37,520Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:55:37,520Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:55:39,822Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=dcb05cd7-d498-4989-a808-dd191c174c00, invocation_id=5ee8e717-e4ad-4747-94a2-dbea18163275, invocation_timestamp=2020-03-05T06:55:39.808Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ee8e717-e4ad-4747-94a2-dbea18163275, session_timestamp=2020-03-05T06:55:39.808Z, thread-id=512, tx_id=1E1A670666A6B406CD1702AD485D63221BFCB03B68FCE9E56B15A3D1486108F0}
[INFO ] 2020-03-05T06:55:39,832Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=dcb05cd7-d498-4989-a808-dd191c174c00, invocation_id=5ee8e717-e4ad-4747-94a2-dbea18163275, invocation_timestamp=2020-03-05T06:55:39.808Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ee8e717-e4ad-4747-94a2-dbea18163275, session_timestamp=2020-03-05T06:55:39.808Z, thread-id=512, tx_id=1E1A670666A6B406CD1702AD485D63221BFCB03B68FCE9E56B15A3D1486108F0}
[INFO ] 2020-03-05T06:55:39,901Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=da52b3f7-54b4-456b-84c9-9ad66b5bd8b0, invocation_id=4e9b895e-5404-4380-8617-5b47e0f04b50, invocation_timestamp=2020-03-05T06:55:37.521Z, origin=Only For Testing, session_id=4e9b895e-5404-4380-8617-5b47e0f04b50, session_timestamp=2020-03-05T06:55:37.521Z, thread-id=512, tx_id=1E1A670666A6B406CD1702AD485D63221BFCB03B68FCE9E56B15A3D1486108F0}
[INFO ] 2020-03-05T06:55:39,901Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=da52b3f7-54b4-456b-84c9-9ad66b5bd8b0, invocation_id=4e9b895e-5404-4380-8617-5b47e0f04b50, invocation_timestamp=2020-03-05T06:55:37.521Z, origin=Only For Testing, session_id=4e9b895e-5404-4380-8617-5b47e0f04b50, session_timestamp=2020-03-05T06:55:37.521Z, thread-id=512, tx_id=1E1A670666A6B406CD1702AD485D63221BFCB03B68FCE9E56B15A3D1486108F0}
[INFO ] 2020-03-05T06:55:39,913Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=da52b3f7-54b4-456b-84c9-9ad66b5bd8b0, invocation_id=4e9b895e-5404-4380-8617-5b47e0f04b50, invocation_timestamp=2020-03-05T06:55:37.521Z, origin=Only For Testing, session_id=4e9b895e-5404-4380-8617-5b47e0f04b50, session_timestamp=2020-03-05T06:55:37.521Z, thread-id=512, tx_id=1E1A670666A6B406CD1702AD485D63221BFCB03B68FCE9E56B15A3D1486108F0}
[INFO ] 2020-03-05T06:55:39,931Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=dcb05cd7-d498-4989-a808-dd191c174c00, invocation_id=5ee8e717-e4ad-4747-94a2-dbea18163275, invocation_timestamp=2020-03-05T06:55:39.808Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ee8e717-e4ad-4747-94a2-dbea18163275, session_timestamp=2020-03-05T06:55:39.808Z, thread-id=512, tx_id=1E1A670666A6B406CD1702AD485D63221BFCB03B68FCE9E56B15A3D1486108F0}
[INFO ] 2020-03-05T06:55:39,940Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=dcb05cd7-d498-4989-a808-dd191c174c00, invocation_id=5ee8e717-e4ad-4747-94a2-dbea18163275, invocation_timestamp=2020-03-05T06:55:39.808Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ee8e717-e4ad-4747-94a2-dbea18163275, session_timestamp=2020-03-05T06:55:39.808Z, thread-id=512, tx_id=1E1A670666A6B406CD1702AD485D63221BFCB03B68FCE9E56B15A3D1486108F0}
[INFO ] 2020-03-05T06:55:39,943Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=dcb05cd7-d498-4989-a808-dd191c174c00, invocation_id=5ee8e717-e4ad-4747-94a2-dbea18163275, invocation_timestamp=2020-03-05T06:55:39.808Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ee8e717-e4ad-4747-94a2-dbea18163275, session_timestamp=2020-03-05T06:55:39.808Z, thread-id=512, tx_id=1E1A670666A6B406CD1702AD485D63221BFCB03B68FCE9E56B15A3D1486108F0}
[INFO ] 2020-03-05T06:55:39,948Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=dcb05cd7-d498-4989-a808-dd191c174c00, invocation_id=5ee8e717-e4ad-4747-94a2-dbea18163275, invocation_timestamp=2020-03-05T06:55:39.808Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5ee8e717-e4ad-4747-94a2-dbea18163275, session_timestamp=2020-03-05T06:55:39.808Z, thread-id=512, tx_id=1E1A670666A6B406CD1702AD485D63221BFCB03B68FCE9E56B15A3D1486108F0}
[INFO ] 2020-03-05T06:55:39,957Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=da52b3f7-54b4-456b-84c9-9ad66b5bd8b0, invocation_id=4e9b895e-5404-4380-8617-5b47e0f04b50, invocation_timestamp=2020-03-05T06:55:37.521Z, origin=Only For Testing, session_id=4e9b895e-5404-4380-8617-5b47e0f04b50, session_timestamp=2020-03-05T06:55:37.521Z, thread-id=512, tx_id=1E1A670666A6B406CD1702AD485D63221BFCB03B68FCE9E56B15A3D1486108F0}
[INFO ] 2020-03-05T06:55:39,957Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=da52b3f7-54b4-456b-84c9-9ad66b5bd8b0, invocation_id=4e9b895e-5404-4380-8617-5b47e0f04b50, invocation_timestamp=2020-03-05T06:55:37.521Z, origin=Only For Testing, session_id=4e9b895e-5404-4380-8617-5b47e0f04b50, session_timestamp=2020-03-05T06:55:37.521Z, thread-id=512, tx_id=1E1A670666A6B406CD1702AD485D63221BFCB03B68FCE9E56B15A3D1486108F0}
[INFO ] 2020-03-05T06:55:40,009Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065539.977/nodes/0/cordapps] {}
[INFO ] 2020-03-05T06:55:40,010Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065539.977/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065539.977/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:55:40,011Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065539.977/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:55:40,014Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065539.977/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:55:40,029Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:55:40,031Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:55:40,035Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:55:39.977Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:55:40,384Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:40,386Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065539.977/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:40,386Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:40,393Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:40,394Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:40,394Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:40,460Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:40,480Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:40,480Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:40,481Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:40,481Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:40,574Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:40,602Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:55:40,611Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:55:40,612Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:55:40,720Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-03-05T06:55:40,724Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:55:40,724Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391340724) {}
[INFO ] 2020-03-05T06:55:40,726Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:55:40,737Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391340724) {}
[INFO ] 2020-03-05T06:55:40,743Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:55:40,759Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391340724) {}
[INFO ] 2020-03-05T06:55:40,771Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:40,786Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F7E15842EC2F0AC3B16038105728F963B12D451F6AE4BC33DEC7F13DD25403E3 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:55:40,788Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-03-05T06:55:40,788Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-03-05T06:55:40,793Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391340724) {}
[INFO ] 2020-03-05T06:55:40,795Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391340724) {}
[INFO ] 2020-03-05T06:55:40,795Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:40,795Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391340724) {}
[INFO ] 2020-03-05T06:55:40,795Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:40,799Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065539.977/nodes/1/cordapps] {}
[INFO ] 2020-03-05T06:55:40,799Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065539.977/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065539.977/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:55:40,799Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065539.977/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:55:40,804Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065539.977/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:55:40,819Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:55:40,842Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:55:40,844Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:55:39.977Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:55:41,180Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,181Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065539.977/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,181Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,188Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,188Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,188Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,236Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,241Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,242Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,243Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,243Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,281Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,300Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:55:41,302Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:41,302Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:41,416Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:41,417Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:55:41,430Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:55:41,430Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391341430) {}
[INFO ] 2020-03-05T06:55:41,431Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:41,435Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391341430) {}
[INFO ] 2020-03-05T06:55:41,438Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:55:41,452Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391341430) {}
[INFO ] 2020-03-05T06:55:41,457Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:41,474Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F7E15842EC2F0AC3B16038105728F963B12D451F6AE4BC33DEC7F13DD25403E3 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:55:41,479Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391341430) {}
[INFO ] 2020-03-05T06:55:41,481Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391340724) {}
[INFO ] 2020-03-05T06:55:41,482Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:55:41,491Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391341430) {}
[INFO ] 2020-03-05T06:55:41,496Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:41,505Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391341430) {}
[INFO ] 2020-03-05T06:55:41,506Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:41,506Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391341430) {}
[INFO ] 2020-03-05T06:55:41,507Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:41,510Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200305-065539.977/nodes/2/cordapps] {}
[INFO ] 2020-03-05T06:55:41,513Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065539.977/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065539.977/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-03-05T06:55:41,514Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065539.977/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-03-05T06:55:41,517Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/ubuntu/parivesh/samples/cordapp-example/workflows-kotlin/build/mock-network/20200305-065539.977/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-03-05T06:55:41,530Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-03-05T06:55:41,544Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:55:41,546Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-03-05T06:55:39.977Z
      epoch=1
  } {}
[INFO ] 2020-03-05T06:55:41,865Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,866Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200305-065539.977/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,866Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,873Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,874Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,874Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,921Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,927Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,927Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,928Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,928Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,963Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-03-05T06:55:41,966Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-03-05T06:55:41,967Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:41,967Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:42,053Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-03-05T06:55:42,054Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-03-05T06:55:42,074Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-03-05T06:55:42,074Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391342074) {}
[INFO ] 2020-03-05T06:55:42,083Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:42,086Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391342074) {}
[INFO ] 2020-03-05T06:55:42,089Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-03-05T06:55:42,104Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391342074) {}
[INFO ] 2020-03-05T06:55:42,107Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:42,147Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=F7E15842EC2F0AC3B16038105728F963B12D451F6AE4BC33DEC7F13DD25403E3 uploader=app filename=CorDapp Example {}
[INFO ] 2020-03-05T06:55:42,154Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391342074) {}
[INFO ] 2020-03-05T06:55:42,156Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1583391340724) {}
[INFO ] 2020-03-05T06:55:42,156Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-03-05T06:55:42,162Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391342074) {}
[INFO ] 2020-03-05T06:55:42,164Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:42,169Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1583391341430) {}
[INFO ] 2020-03-05T06:55:42,170Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:42,175Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391342074) {}
[INFO ] 2020-03-05T06:55:42,176Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-03-05T06:55:42,181Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391342074) {}
[INFO ] 2020-03-05T06:55:42,182Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-03-05T06:55:42,182Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1583391342074) {}
[INFO ] 2020-03-05T06:55:42,183Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-03-05T06:55:42,183Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:55:42,184Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-03-05T06:55:42,184Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-03-05T06:55:42,184Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-03-05T06:55:44,477Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=d44257c6-5ba8-4cb7-93c1-b1889d159e80, invocation_id=62899e9a-cf89-4e8f-b024-772c270aecea, invocation_timestamp=2020-03-05T06:55:44.463Z, origin=O=Mock Company 1, L=London, C=GB, session_id=62899e9a-cf89-4e8f-b024-772c270aecea, session_timestamp=2020-03-05T06:55:44.463Z, thread-id=586, tx_id=18300770059FD608F4F1789A155A0A345552AEA1D2C209ECCAF44E8FAFBC3105}
[INFO ] 2020-03-05T06:55:44,489Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=d44257c6-5ba8-4cb7-93c1-b1889d159e80, invocation_id=62899e9a-cf89-4e8f-b024-772c270aecea, invocation_timestamp=2020-03-05T06:55:44.463Z, origin=O=Mock Company 1, L=London, C=GB, session_id=62899e9a-cf89-4e8f-b024-772c270aecea, session_timestamp=2020-03-05T06:55:44.463Z, thread-id=586, tx_id=18300770059FD608F4F1789A155A0A345552AEA1D2C209ECCAF44E8FAFBC3105}
[INFO ] 2020-03-05T06:55:44,571Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=d270baa6-ed52-46dc-b958-4b73b31145ba, invocation_id=fbb3547c-fb26-4c2c-9243-cb83c0dffec6, invocation_timestamp=2020-03-05T06:55:42.187Z, origin=Only For Testing, session_id=fbb3547c-fb26-4c2c-9243-cb83c0dffec6, session_timestamp=2020-03-05T06:55:42.187Z, thread-id=586, tx_id=18300770059FD608F4F1789A155A0A345552AEA1D2C209ECCAF44E8FAFBC3105}
[INFO ] 2020-03-05T06:55:44,571Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=d270baa6-ed52-46dc-b958-4b73b31145ba, invocation_id=fbb3547c-fb26-4c2c-9243-cb83c0dffec6, invocation_timestamp=2020-03-05T06:55:42.187Z, origin=Only For Testing, session_id=fbb3547c-fb26-4c2c-9243-cb83c0dffec6, session_timestamp=2020-03-05T06:55:42.187Z, thread-id=586, tx_id=18300770059FD608F4F1789A155A0A345552AEA1D2C209ECCAF44E8FAFBC3105}
[INFO ] 2020-03-05T06:55:44,583Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=d270baa6-ed52-46dc-b958-4b73b31145ba, invocation_id=fbb3547c-fb26-4c2c-9243-cb83c0dffec6, invocation_timestamp=2020-03-05T06:55:42.187Z, origin=Only For Testing, session_id=fbb3547c-fb26-4c2c-9243-cb83c0dffec6, session_timestamp=2020-03-05T06:55:42.187Z, thread-id=586, tx_id=18300770059FD608F4F1789A155A0A345552AEA1D2C209ECCAF44E8FAFBC3105}
[INFO ] 2020-03-05T06:55:44,610Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=d44257c6-5ba8-4cb7-93c1-b1889d159e80, invocation_id=62899e9a-cf89-4e8f-b024-772c270aecea, invocation_timestamp=2020-03-05T06:55:44.463Z, origin=O=Mock Company 1, L=London, C=GB, session_id=62899e9a-cf89-4e8f-b024-772c270aecea, session_timestamp=2020-03-05T06:55:44.463Z, thread-id=586, tx_id=18300770059FD608F4F1789A155A0A345552AEA1D2C209ECCAF44E8FAFBC3105}
[INFO ] 2020-03-05T06:55:44,626Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=d44257c6-5ba8-4cb7-93c1-b1889d159e80, invocation_id=62899e9a-cf89-4e8f-b024-772c270aecea, invocation_timestamp=2020-03-05T06:55:44.463Z, origin=O=Mock Company 1, L=London, C=GB, session_id=62899e9a-cf89-4e8f-b024-772c270aecea, session_timestamp=2020-03-05T06:55:44.463Z, thread-id=586, tx_id=18300770059FD608F4F1789A155A0A345552AEA1D2C209ECCAF44E8FAFBC3105}
[INFO ] 2020-03-05T06:55:44,633Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000011, flow-id=d44257c6-5ba8-4cb7-93c1-b1889d159e80, invocation_id=62899e9a-cf89-4e8f-b024-772c270aecea, invocation_timestamp=2020-03-05T06:55:44.463Z, origin=O=Mock Company 1, L=London, C=GB, session_id=62899e9a-cf89-4e8f-b024-772c270aecea, session_timestamp=2020-03-05T06:55:44.463Z, thread-id=586, tx_id=18300770059FD608F4F1789A155A0A345552AEA1D2C209ECCAF44E8FAFBC3105}
[INFO ] 2020-03-05T06:55:44,641Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000011, flow-id=d44257c6-5ba8-4cb7-93c1-b1889d159e80, invocation_id=62899e9a-cf89-4e8f-b024-772c270aecea, invocation_timestamp=2020-03-05T06:55:44.463Z, origin=O=Mock Company 1, L=London, C=GB, session_id=62899e9a-cf89-4e8f-b024-772c270aecea, session_timestamp=2020-03-05T06:55:44.463Z, thread-id=586, tx_id=18300770059FD608F4F1789A155A0A345552AEA1D2C209ECCAF44E8FAFBC3105}
[INFO ] 2020-03-05T06:55:44,653Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=d270baa6-ed52-46dc-b958-4b73b31145ba, invocation_id=fbb3547c-fb26-4c2c-9243-cb83c0dffec6, invocation_timestamp=2020-03-05T06:55:42.187Z, origin=Only For Testing, session_id=fbb3547c-fb26-4c2c-9243-cb83c0dffec6, session_timestamp=2020-03-05T06:55:42.187Z, thread-id=586, tx_id=18300770059FD608F4F1789A155A0A345552AEA1D2C209ECCAF44E8FAFBC3105}
[INFO ] 2020-03-05T06:55:44,655Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=d270baa6-ed52-46dc-b958-4b73b31145ba, invocation_id=fbb3547c-fb26-4c2c-9243-cb83c0dffec6, invocation_timestamp=2020-03-05T06:55:42.187Z, origin=Only For Testing, session_id=fbb3547c-fb26-4c2c-9243-cb83c0dffec6, session_timestamp=2020-03-05T06:55:42.187Z, thread-id=586, tx_id=18300770059FD608F4F1789A155A0A345552AEA1D2C209ECCAF44E8FAFBC3105}
